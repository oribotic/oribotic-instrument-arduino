/*
 * Copyright (c) 2023 Matthew Gardiner
 *
 * MIT License.
 * For information on usage and redistribution, and for a DISCLAIMER OF ALL
 * WARRANTIES, see the file, "LICENSE.txt," in this distribution.
 *
 * See https://github.com/oribotic/oribotic-instruments for documentation
 *
 */
#include "ORICORD.h"

uint8_t intervaldelay = INTERVALDELAY;

#if ORIGAMI == YOSHIMURA
    // --------------------------------------------------------------------    BUTTONS
    struct pressbuttons buttons[BTN_COUNT] =
    {
        {.pin = CAL_BTN, .led = LED1, .state = 0},
        {.pin = HI_BTN,  .led = LED1, .state = 0},
        {.pin = LO_BTN,  .led = LED1, .state = 0},
        {.pin = FN1_BTN, .led = LED1, .state = 0},
        {.pin = FN2_BTN, .led = LED1, .state = 0}
    };

    #if TEXTILE == 0
        struct orikey orikeys[PANELCOUNT] = {
            // numbered clockwise, starting from usb cable
            // [0 / 1][2 / 3]
            // [6 / 7][4 / 5]
            // top left (closest to usb)
            {.pin = 5, .panel = 0, .note = 4, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  0
            {.pin = 4, .panel = 0, .note = 5, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  1
            // top right
            {.pin = 0, .panel = 0, .note = 8, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  2
            {.pin = 1, .panel = 0, .note = 9, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  3
            // bottom right
            {.pin = 7, .panel = 0, .note = 7, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  4
            {.pin = 6, .panel = 0, .note = 6, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  5
            // bottom left
            {.pin = 3, .panel = 0, .note = 3, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  6
            {.pin = 2, .panel = 0, .note = 2, .hard = 1023, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  7 
        };  
    #endif
    // same for midi and osc
    #if TEXTILE == 1
        struct orikey orikeys[PANELCOUNT] = {
            {.pin = 4, .panel = 0, .note = 2, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  0
            {.pin = 5, .panel = 0, .note = 3, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  1
            {.pin = 2, .panel = 0, .note = 8, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  6
            {.pin = 3, .panel = 0, .note = 9, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  7
            {.pin = 7, .panel = 0, .note = 4, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  2
            {.pin = 6, .panel = 0, .note = 5, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  3
            {.pin = 9, .panel = 0, .note = 7, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  5
            {.pin = 8, .panel = 0, .note = 6, .hard = 70, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  //  4
    };
    #endif
    

    // LINEAR BEND TABLE
    #if OSC == 1
        uint8_t bendLinear[256] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 42, 43, 43, 44, 44, 45, 45, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 52, 52, 53, 54, 54, 55, 56, 56, 57, 58, 58, 59, 60, 61, 62, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 93, 95, 97, 99, 102, 105, 108, 111, 115, 119, 123, 128, 134, 142, 151, 165, 186, 190, 195, 200, 205, 210, 220, 255};
    #endif 
    
    #if MIDI == 1
    uint8_t bendLinear[128] = {0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18, 19, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 26, 26, 27, 28, 28, 29, 30, 31, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 47, 49, 52, 55, 59, 64, 71, 82, 95, 100, 105, 127};
    #endif

    #ifdef PANELGROUPS
    // 11111111 = 255
    // 11001100 = 204
    // 00110011 = 51
    bool usePanelGroups = true;
    
    struct panelgroup
    {
        char *title;
        uint8_t value;
        byte pattern[1];
    };

    // 00000011 = 3
    // 00001100 = 12
    // 00110000 = 48
    // 11000000 = 192
    // 00110011 = 51

    struct panelgroup panelgroups[8] = {
        {.title = "pp01", .value = 0, .pattern = {0b00000011}},
        {.title = "pp23", .value = 0, .pattern = {0b00001100}},
        {.title = "pp45", .value = 0, .pattern = {0b00110000}},
        {.title = "pp67", .value = 0, .pattern = {0b11000000}},
        {.title = "dia1", .value = 0, .pattern = {0b00110011}},
        {.title = "dia2", .value = 0, .pattern = {0b11001100}},
    };
    #endif  // ------------------------- PANELGROUPS

#endif // ------------------------- YOSHIMURA

#if ORIGAMI == KRESLING

    const uint8_t MPR121_INT = 4; // pin 4 is the MPR121 interrupt on the Bare Touch Board

    // --------------------------------------------------------------------    BUTTONS

    struct pressbuttons buttons[BTN_COUNT] =
    {
        {.pin = CAL_BTN, .led = LED1, .state = 0},
        {.pin = HI_BTN, .led = LED2, .state = 0},
        {.pin = LO_BTN, .led = LED3, .state = 0}
    };

    // LINEAR BEND TABLE
    uint8_t bendLinear[256] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 42, 43, 43, 44, 44, 45, 45, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 52, 52, 53, 54, 54, 55, 56, 56, 57, 58, 58, 59, 60, 61, 62, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 93, 95, 97, 99, 102, 105, 108, 111, 115, 119, 123, 128, 134, 142, 151, 165, 186, 190, 195, 200, 205, 210, 220, 255};

    struct orikey orikeys[48] = {
        // row 1  
        { .pin = 0,  .panel = 0, .note =  3, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  0
        { .pin = 7,  .panel = 0, .note =  2, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  1
        { .pin = 6,  .panel = 0, .note = 12, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  2
        { .pin = 1,  .panel = 0, .note = 24, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  3
        { .pin = 2,  .panel = 0, .note = 24, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  4
        { .pin = 5,  .panel = 0, .note = 12, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  5
        { .pin = 4,  .panel = 0, .note =  5, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  6
        { .pin = 3,  .panel = 0, .note =  0, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  7
        // row 2
        { .pin = 8,  .panel = 0, .note =  5, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  8
        { .pin = 3,  .panel = 1, .note =  4, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, //  9
        { .pin = 2,  .panel = 1, .note = 14, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 10
        { .pin = 9,  .panel = 0, .note = 26, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 11
        { .pin = 10, .panel = 0, .note = 26, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 12
        { .pin = 11, .panel = 1, .note = 14, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 13
        { .pin = 0,  .panel = 1, .note =  7, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 14
        { .pin = 11, .panel = 0, .note =  2, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 15
        // row 3
        { .pin = 4,  .panel = 1, .note =  7, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 16
        { .pin = 11, .panel = 1, .note =  6, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 17
        { .pin = 10, .panel = 1, .note = 16, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 18
        { .pin = 5,  .panel = 1, .note = 28, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 19
        { .pin = 6,  .panel = 1, .note = 28, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 20
        { .pin = 9,  .panel = 1, .note = 16, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 21
        { .pin = 8,  .panel = 1, .note =  9, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 22
        { .pin = 7,  .panel = 1, .note =  4, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 23
        // row 4
        { .pin = 0,  .panel = 2, .note =  8, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 24
        { .pin = 7,  .panel = 2, .note =  7, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 25
        { .pin = 6,  .panel = 2, .note = 17, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 26
        { .pin = 1,  .panel = 2, .note = 29, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 27
        { .pin = 2,  .panel = 2, .note = 29, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 28
        { .pin = 5,  .panel = 2, .note = 17, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 29
        { .pin = 4,  .panel = 2, .note = 10, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 30
        { .pin = 3,  .panel = 2, .note =  5, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 31
        // row 5 
        { .pin = 8,  .panel = 2, .note = 10, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 32
        { .pin = 3,  .panel = 3, .note =  9, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 33
        { .pin = 2,  .panel = 3, .note = 19, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 34
        { .pin = 9,  .panel = 2, .note = 31, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 35
        { .pin = 10, .panel = 2, .note = 31, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 36
        { .pin = 1,  .panel = 3, .note = 19, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 37
        { .pin = 0,  .panel = 3, .note = 12, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 38
        { .pin = 11, .panel = 2, .note =  7, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 39
        // row 6 
        { .pin = 4,  .panel = 3, .note = 12, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 40
        { .pin = 11, .panel = 3, .note = 11, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 41
        { .pin = 10, .panel = 3, .note = 21, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 42
        { .pin = 5,  .panel = 3, .note = 33, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 43
        { .pin = 6,  .panel = 3, .note = 33, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 44
        { .pin = 9,  .panel = 3, .note = 21, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 45
        { .pin = 8,  .panel = 3, .note = 14, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }, // 46
        { .pin = 7,  .panel = 3, .note =  9, .hard = 70, .bendLO = 700, .bendHI = 750, .state = 0, .last = 0 }  // 47
    };

   #ifdef PANELGROUPS
    // 11111111 = 255
    // 11001100 = 204
    // 00110011 = 51
    bool usePanelGroups = true;

    struct panelgroup
    {
        char *title;
        uint8_t value;
        byte pattern[6];
    };

    // 11111111 = 255
    // 11001100 = 204
    // 00110011 = 51

    struct panelgroup panelgroups[8] = {
        {.title = "tlt0", .value = 0, .pattern = {0b11111111, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000}},
        {.title = "tlt1", .value = 0, .pattern = {0b00000000, 0b11111111, 0b00000000, 0b00000000, 0b00000000, 0b00000000}},
        {.title = "tlt2", .value = 0, .pattern = {0b00000000, 0b00000000, 0b11111111, 0b00000000, 0b00000000, 0b00000000}},
        {.title = "tlt3", .value = 0, .pattern = {0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b00000000, 0b00000000}},
        {.title = "tlt4", .value = 0, .pattern = {0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b00000000}},
        {.title = "tlt5", .value = 0, .pattern = {0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111}},
        {.title = "twsL", .value = 0, .pattern = {0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100, 0b11001100}},
        {.title = "twsR", .value = 0, .pattern = {0b00110011, 0b00110011, 0b00110011, 0b00110011, 0b00110011, 0b00110011}},
    };
    #endif  // ------------------------- PANELGROUPS

#endif // ------------------------- KRESLING

#if ORIGAMI == SUKI
    // --------------------------------------------------------------------    BUTTONS
    struct pressbuttons buttons[BTN_COUNT] =
    {
        {.pin = CAL_BTN, .led = LED1, .state = 0},
        {.pin = HI_BTN, .led = LED1, .state = 0},
        {.pin = LO_BTN, .led = LED1, .state = 0},
        {.pin = FN1_BTN, .led = LED1, .state = 0},
        {.pin = FN2_BTN, .led = LED1, .state = 0}
    };

    // LINEAR BEND TABLE
    uint8_t bendLinear[256] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 42, 43, 43, 44, 44, 45, 45, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 52, 52, 53, 54, 54, 55, 56, 56, 57, 58, 58, 59, 60, 61, 62, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 93, 95, 97, 99, 102, 105, 108, 111, 115, 119, 123, 128, 134, 142, 151, 165, 186, 190, 195, 200, 205, 210, 220, 255};

    struct orikey orikeys[PANELCOUNT] = {
        {.pin = 3,  .panel = 0, .note = 2, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  0
        {.pin = 4,  .panel = 0, .note = 3, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  1
        {.pin = 2,  .panel = 0, .note = 8, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  2
        {.pin = 0,  .panel = 0, .note = 9, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  3
        {.pin = 11, .panel = 0, .note = 4, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  4
        {.pin = 8,  .panel = 0, .note = 5, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  5
        {.pin = 5,  .panel = 0, .note = 7, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  6
        {.pin = 1,  .panel = 0, .note = 6, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  7
        {.pin = 10, .panel = 0, .note = 2, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  8
        {.pin = 9,  .panel = 0, .note = 3, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  9
        {.pin = 7,  .panel = 0, .note = 8, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},  // 10
        {.pin = 6,  .panel = 0, .note = 9, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0}  // 11
    };

#endif 


#if ORIGAMI == ANGLE_SENSOR
    // --------------------------------------------------------------------    BUTTONS
    struct pressbuttons buttons[BTN_COUNT] =
    {
        {.pin = CAL_BTN, .led = LED1, .state = 0},
        {.pin = HI_BTN, .led = LED1, .state = 0},
        {.pin = LO_BTN, .led = LED1, .state = 0},
        {.pin = FN1_BTN, .led = LED1, .state = 0},
        {.pin = FN2_BTN, .led = LED1, .state = 0}
    };

    // LINEAR BEND TABLE
    //uint8_t bendLinear[256] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 25, 25, 26, 26, 26, 26, 27, 27, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 39, 39, 40, 40, 41, 41, 42, 42, 42, 43, 43, 44, 44, 45, 45, 46, 47, 47, 48, 48, 49, 49, 50, 50, 51, 52, 52, 53, 54, 54, 55, 56, 56, 57, 58, 58, 59, 60, 61, 62, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 86, 87, 89, 91, 93, 95, 97, 99, 102, 105, 108, 111, 115, 119, 123, 128, 134, 142, 151, 165, 186, 190, 195, 200, 205, 210, 220, 255};

    //0 float bendLinear[256] = {0.0, 1.6649367, 1.7577157, 1.2337117, 0.9528887, 1.0637007, 1.3931931, 1.7670095, 2.0627918, 2.2833972, 2.4501488, 2.5843515, 2.7029443, 2.8129334, 2.9199505, 3.0296268, 3.1475866, 3.2763772, 3.410683, 3.5439503, 3.6696258, 3.781798, 3.8799398, 3.9662106, 4.0427904, 4.1118584, 4.175594, 4.236177, 4.2957425, 4.3553576, 4.4149857, 4.4745398, 4.533934, 4.5930815, 4.6518946, 4.710288, 4.768174, 4.8254666, 4.882078, 4.937923, 4.992914, 5.0469646, 5.0999875, 5.1519, 5.2026567, 5.2522426, 5.300644, 5.3478456, 5.393833, 5.438592, 5.482108, 5.5243664, 5.565353, 5.605053, 5.6434517, 5.680535, 5.7163005, 5.7508426, 5.7843046, 5.816829, 5.8485594, 5.8796387, 5.910209, 5.9404144, 5.9703975, 6.000301, 6.030268, 6.0604424, 6.0909657, 6.121982, 6.1536336, 6.1860642, 6.219416, 6.253833, 6.289425, 6.3261237, 6.3637977, 6.402315, 6.4415445, 6.4813538, 6.521611, 6.5621853, 6.6029444, 6.643757, 6.6844907, 6.7250147, 6.765197, 6.8049054, 6.8440213, 6.8828154, 6.922005, 6.962334, 7.004545, 7.0493813, 7.097585, 7.149901, 7.207071, 7.269838, 7.338945, 7.41513, 7.498414, 7.587419, 7.6806054, 7.776433, 7.873362, 7.969853, 8.064366, 8.155361, 8.241299, 8.320946, 8.394685, 8.463431, 8.5281, 8.589606, 8.648865, 8.706791, 8.764299, 8.822307, 8.881859, 8.944425, 9.011557, 9.0848055, 9.165725, 9.255865, 9.356778, 9.469693, 9.592763, 9.722448, 9.855188, 9.987426, 10.115602, 10.2361555, 10.346563, 10.448866, 10.546366, 10.642366, 10.7401705, 10.843046, 10.952073, 11.064853, 11.17868, 11.290853, 11.398681, 11.503371, 11.614862, 11.74428, 11.902748, 12.099128, 12.323073, 12.554578, 12.773558, 12.963686, 13.13088, 13.28922, 13.452495, 13.627659, 13.81489, 14.013943, 14.218525, 14.413975, 14.586172, 14.749966, 14.950609, 15.231935, 15.576038, 15.905405, 16.15778, 16.361115, 16.571476, 16.8108, 17.04785, 17.265377, 17.542122, 17.966633, 18.440613, 18.801178, 19.07119, 19.341862, 19.714302, 20.207413, 20.65613, 20.999601, 21.328505, 21.712631, 22.12531, 22.448233, 23.09149, 23.827589, 24.172268, 24.645163, 25.332884, 25.91192, 26.422432, 26.913628, 27.562773, 28.45572, 29.011715, 29.584429, 30.229944, 31.26613, 31.951578, 32.84828, 33.7772, 34.64113, 35.461952, 36.57158, 37.40348, 38.82884, 39.774525, 41.15612, 42.108322, 43.712933, 44.868652, 46.369514, 47.774475, 49.450466, 51.12664, 52.5525, 54.823242, 56.652493, 58.77066, 60.60729, 63.186382, 65.49737, 67.79397, 70.93973, 73.24353, 76.54539, 79.65849, 82.47776, 85.95649, 89.79465, 93.38834, 96.90159, 100.63929, 106.665764, 108.34807, 111.93568, 116.91652, 125.94596, 124.57847, 130.88931, 129.99971, 142.83876, 146.79709, 152.14386, 157.76306, 163.70076, 170.119, 177.60129, 185.31096, 193.93375, 205.20949, 214.16693, 227.40862, 239.4191};
    #if SENSOR_TYPE == K66_F256
        //float bendLinear[256] = {0.0, 1.3362737, 1.5718609, 1.2873163, 1.0467643, 1.0776174, 1.29198, 1.5898126, 1.8751926, 2.1111655, 2.3048625, 2.4644747, 2.5981846, 2.7134235, 2.8163588, 2.9130368, 3.0095038, 3.111806, 3.2248423, 3.3460913, 3.4700794, 3.5913258, 3.7043498, 3.805106, 3.8943312, 3.973758, 4.0451183, 4.1101446, 4.1705685, 4.228122, 4.2845287, 4.3408637, 4.397156, 4.453337, 4.5093417, 4.5651026, 4.620552, 4.675624, 4.7302504, 4.784365, 4.8379016, 4.890792, 4.94297, 4.9943676, 5.044919, 5.094557, 5.143215, 5.190853, 5.2374578, 5.283016, 5.3275166, 5.3709455, 5.413292, 5.454542, 5.494685, 5.5337076, 5.571597, 5.608342, 5.6439295, 5.678347, 5.71159, 5.7437296, 5.774886, 5.80518, 5.834731, 5.86366, 5.8920865, 5.9201317, 5.9479146, 5.9755564, 6.003177, 6.0308967, 6.058836, 6.087115, 6.115854, 6.145173, 6.1751924, 6.2060323, 6.2378135, 6.2706537, 6.304576, 6.339477, 6.3752446, 6.411766, 6.4489293, 6.486622, 6.524731, 6.5631447, 6.6017504, 6.6404357, 6.6790886, 6.717596, 6.755846, 6.793726, 6.831124, 6.8680935, 6.905154, 6.9429064, 6.9819508, 7.0228868, 7.0663157, 7.1128373, 7.1630516, 7.2175603, 7.2769623, 7.3418584, 7.412845, 7.4899697, 7.5721664, 7.658238, 7.746985, 7.837209, 7.927712, 8.017295, 8.104759, 8.188907, 8.268543, 8.343053, 8.412926, 8.478783, 8.541243, 8.600924, 8.658444, 8.714426, 8.7694845, 8.824242, 8.87952, 8.936718, 8.997336, 9.062874, 9.134831, 9.214707, 9.304003, 9.404213, 9.515608, 9.635451, 9.760554, 9.887731, 10.01379, 10.135547, 10.249812, 10.354711, 10.452389, 10.545759, 10.637736, 10.731235, 10.82916, 10.932896, 11.040444, 11.149356, 11.257177, 11.361458, 11.460941, 11.562182, 11.674875, 11.808722, 11.973409, 12.171766, 12.388915, 12.607153, 12.80878, 12.982154, 13.136717, 13.286493, 13.445185, 13.617895, 13.8004055, 13.988024, 14.175468, 14.3563595, 14.52421, 14.682018, 14.860215, 15.0941515, 15.39915, 15.725295, 16.009987, 16.230988, 16.43218, 16.658522, 16.901472, 17.120779, 17.32469, 17.612307, 18.049906, 18.49761, 18.80876, 19.043583, 19.304153, 19.661276, 20.128864, 20.57278, 20.911486, 21.227686, 21.58624, 21.99354, 22.335306, 22.731045, 23.425081, 23.980959, 24.369522, 24.875309, 25.533644, 26.01085, 26.538519, 27.049759, 27.718956, 28.491835, 29.085375, 29.705883, 30.152542, 31.283813, 31.91716, 32.583828, 33.728516, 34.56342, 35.211643, 36.438507, 37.125027, 38.435425, 39.469326, 40.51256, 41.826878, 42.77709, 44.3802, 45.440502, 47.12347, 48.645958, 50.103443, 51.7648, 53.670177, 55.404594, 57.50695, 59.98943, 62.490417, 65.27857, 67.404236, 70.2853, 72.95631, 76.89145, 80.977516, 85.22518, 88.17303, 93.098305, 98.18673, 103.77337, 109.73933, 117.04582, 124.91092, 133.1379, 144.00456, 153.97763, 167.44847, 181.64912, 202.78278, 225.33173};
        float bendLinear[256] = {0.0, 0.5853293, 0.6179469, 0.4337268, 0.33499995, 0.37395728, 0.48979446, 0.6212143, 0.7252003, 0.80275685, 0.86138046, 0.90856105, 0.9502539, 0.98892194, 1.026545, 1.0651032, 1.1065735, 1.1518514, 1.1990682, 1.24592, 1.2901027, 1.3295383, 1.3640413, 1.3943709, 1.4212935, 1.4455752, 1.4679823, 1.4892809, 1.510222, 1.5311804, 1.5521433, 1.5730804, 1.5939612, 1.6147552, 1.6354318, 1.6559606, 1.6763111, 1.696453, 1.7163557, 1.7359886, 1.7553214, 1.7743235, 1.7929645, 1.8112148, 1.829059, 1.8464916, 1.8635076, 1.8801019, 1.8962694, 1.9120051, 1.9273037, 1.9421601, 1.9565694, 1.9705263, 1.984026, 1.997063, 2.0096369, 2.0217805, 2.0335445, 2.044979, 2.0561342, 2.0670605, 2.077808, 2.088427, 2.0989678, 2.1094809, 2.1200163, 2.1306243, 2.1413553, 2.1522593, 2.1633868, 2.1747882, 2.1865134, 2.198613, 2.2111259, 2.2240279, 2.2372727, 2.250814, 2.2646055, 2.278601, 2.292754, 2.3070183, 2.3213477, 2.3356957, 2.3500164, 2.364263, 2.3783894, 2.3923495, 2.4061012, 2.4197397, 2.4335175, 2.4476955, 2.4625354, 2.4782982, 2.495245, 2.513637, 2.5337358, 2.5558023, 2.580098, 2.6068816, 2.6361613, 2.667452, 2.7002127, 2.7339022, 2.767979, 2.8019016, 2.8351288, 2.8671193, 2.8973317, 2.9253325, 2.9512565, 2.9754252, 2.9981601, 3.0197835, 3.0406165, 3.0609813, 3.0811992, 3.101592, 3.1225283, 3.144524, 3.1681252, 3.193877, 3.222325, 3.254015, 3.2894924, 3.3291888, 3.3724558, 3.4180481, 3.4647148, 3.5112045, 3.556266, 3.5986485, 3.6374638, 3.6734293, 3.7077067, 3.7414567, 3.775841, 3.8120086, 3.8503382, 3.8899872, 3.930005, 3.9694402, 4.0073485, 4.044154, 4.08335, 4.128848, 4.18456, 4.2535996, 4.3323307, 4.4137187, 4.490704, 4.557546, 4.616325, 4.6719913, 4.729393, 4.7909737, 4.856797, 4.9267764, 4.9987, 5.067413, 5.127951, 5.185535, 5.2560735, 5.354977, 5.475951, 5.591744, 5.680469, 5.751954, 5.8259096, 5.9100475, 5.993385, 6.069859, 6.1671524, 6.3163943, 6.483028, 6.609789, 6.7047153, 6.7998734, 6.9308095, 7.1041684, 7.261921, 7.3826723, 7.4983025, 7.633347, 7.7784295, 7.891957, 8.118102, 8.376886, 8.498063, 8.664315, 8.906092, 9.109659, 9.289136, 9.4618225, 9.690038, 10.003964, 10.19943, 10.400776, 10.627715, 10.991999, 11.232977, 11.548224, 11.874796, 12.178522, 12.4670925, 12.857196, 13.149661, 13.6507635, 13.983232, 14.468948, 14.803707, 15.367827, 15.774136, 16.301783, 16.795715, 17.38493, 17.974209, 18.475489, 19.273796, 19.916893, 20.66156, 21.30725, 22.213963, 23.026419, 23.833818, 24.939749, 25.74968, 26.910486, 28.004938, 28.996088, 30.21908, 31.56843, 32.83184, 34.066963, 35.381, 37.499683, 38.091118, 39.352386, 41.103462, 44.277878, 43.79712, 46.015774, 45.703026, 50.21675, 51.608353, 53.488075, 55.463577, 57.55105, 59.807465, 62.437954, 65.148384, 68.17983, 72.14396, 75.29306, 79.94834, 84.17078};
    #endif
    #if SENSOR_TYPE == K66_F900
        //float bendLinear[256] = {0.0, 1.3362737, 1.5718609, 1.2873163, 1.0467643, 1.0776174, 1.29198, 1.5898126, 1.8751926, 2.1111655, 2.3048625, 2.4644747, 2.5981846, 2.7134235, 2.8163588, 2.9130368, 3.0095038, 3.111806, 3.2248423, 3.3460913, 3.4700794, 3.5913258, 3.7043498, 3.805106, 3.8943312, 3.973758, 4.0451183, 4.1101446, 4.1705685, 4.228122, 4.2845287, 4.3408637, 4.397156, 4.453337, 4.5093417, 4.5651026, 4.620552, 4.675624, 4.7302504, 4.784365, 4.8379016, 4.890792, 4.94297, 4.9943676, 5.044919, 5.094557, 5.143215, 5.190853, 5.2374578, 5.283016, 5.3275166, 5.3709455, 5.413292, 5.454542, 5.494685, 5.5337076, 5.571597, 5.608342, 5.6439295, 5.678347, 5.71159, 5.7437296, 5.774886, 5.80518, 5.834731, 5.86366, 5.8920865, 5.9201317, 5.9479146, 5.9755564, 6.003177, 6.0308967, 6.058836, 6.087115, 6.115854, 6.145173, 6.1751924, 6.2060323, 6.2378135, 6.2706537, 6.304576, 6.339477, 6.3752446, 6.411766, 6.4489293, 6.486622, 6.524731, 6.5631447, 6.6017504, 6.6404357, 6.6790886, 6.717596, 6.755846, 6.793726, 6.831124, 6.8680935, 6.905154, 6.9429064, 6.9819508, 7.0228868, 7.0663157, 7.1128373, 7.1630516, 7.2175603, 7.2769623, 7.3418584, 7.412845, 7.4899697, 7.5721664, 7.658238, 7.746985, 7.837209, 7.927712, 8.017295, 8.104759, 8.188907, 8.268543, 8.343053, 8.412926, 8.478783, 8.541243, 8.600924, 8.658444, 8.714426, 8.7694845, 8.824242, 8.87952, 8.936718, 8.997336, 9.062874, 9.134831, 9.214707, 9.304003, 9.404213, 9.515608, 9.635451, 9.760554, 9.887731, 10.01379, 10.135547, 10.249812, 10.354711, 10.452389, 10.545759, 10.637736, 10.731235, 10.82916, 10.932896, 11.040444, 11.149356, 11.257177, 11.361458, 11.460941, 11.562182, 11.674875, 11.808722, 11.973409, 12.171766, 12.388915, 12.607153, 12.80878, 12.982154, 13.136717, 13.286493, 13.445185, 13.617895, 13.8004055, 13.988024, 14.175468, 14.3563595, 14.52421, 14.682018, 14.860215, 15.0941515, 15.39915, 15.725295, 16.009987, 16.230988, 16.43218, 16.658522, 16.901472, 17.120779, 17.32469, 17.612307, 18.049906, 18.49761, 18.80876, 19.043583, 19.304153, 19.661276, 20.128864, 20.57278, 20.911486, 21.227686, 21.58624, 21.99354, 22.335306, 22.731045, 23.425081, 23.980959, 24.369522, 24.875309, 25.533644, 26.01085, 26.538519, 27.049759, 27.718956, 28.491835, 29.085375, 29.705883, 30.152542, 31.283813, 31.91716, 32.583828, 33.728516, 34.56342, 35.211643, 36.438507, 37.125027, 38.435425, 39.469326, 40.51256, 41.826878, 42.77709, 44.3802, 45.440502, 47.12347, 48.645958, 50.103443, 51.7648, 53.670177, 55.404594, 57.50695, 59.98943, 62.490417, 65.27857, 67.404236, 70.2853, 72.95631, 76.89145, 80.977516, 85.22518, 88.17303, 93.098305, 98.18673, 103.77337, 109.73933, 117.04582, 124.91092, 133.1379, 144.00456, 153.97763, 167.44847, 181.64912, 202.78278, 225.33173};
        float bendLinear[256] = {0.0, 0.5853293, 0.6179469, 0.4337268, 0.33499995, 0.37395728, 0.48979446, 0.6212143, 0.7252003, 0.80275685, 0.86138046, 0.90856105, 0.9502539, 0.98892194, 1.026545, 1.0651032, 1.1065735, 1.1518514, 1.1990682, 1.24592, 1.2901027, 1.3295383, 1.3640413, 1.3943709, 1.4212935, 1.4455752, 1.4679823, 1.4892809, 1.510222, 1.5311804, 1.5521433, 1.5730804, 1.5939612, 1.6147552, 1.6354318, 1.6559606, 1.6763111, 1.696453, 1.7163557, 1.7359886, 1.7553214, 1.7743235, 1.7929645, 1.8112148, 1.829059, 1.8464916, 1.8635076, 1.8801019, 1.8962694, 1.9120051, 1.9273037, 1.9421601, 1.9565694, 1.9705263, 1.984026, 1.997063, 2.0096369, 2.0217805, 2.0335445, 2.044979, 2.0561342, 2.0670605, 2.077808, 2.088427, 2.0989678, 2.1094809, 2.1200163, 2.1306243, 2.1413553, 2.1522593, 2.1633868, 2.1747882, 2.1865134, 2.198613, 2.2111259, 2.2240279, 2.2372727, 2.250814, 2.2646055, 2.278601, 2.292754, 2.3070183, 2.3213477, 2.3356957, 2.3500164, 2.364263, 2.3783894, 2.3923495, 2.4061012, 2.4197397, 2.4335175, 2.4476955, 2.4625354, 2.4782982, 2.495245, 2.513637, 2.5337358, 2.5558023, 2.580098, 2.6068816, 2.6361613, 2.667452, 2.7002127, 2.7339022, 2.767979, 2.8019016, 2.8351288, 2.8671193, 2.8973317, 2.9253325, 2.9512565, 2.9754252, 2.9981601, 3.0197835, 3.0406165, 3.0609813, 3.0811992, 3.101592, 3.1225283, 3.144524, 3.1681252, 3.193877, 3.222325, 3.254015, 3.2894924, 3.3291888, 3.3724558, 3.4180481, 3.4647148, 3.5112045, 3.556266, 3.5986485, 3.6374638, 3.6734293, 3.7077067, 3.7414567, 3.775841, 3.8120086, 3.8503382, 3.8899872, 3.930005, 3.9694402, 4.0073485, 4.044154, 4.08335, 4.128848, 4.18456, 4.2535996, 4.3323307, 4.4137187, 4.490704, 4.557546, 4.616325, 4.6719913, 4.729393, 4.7909737, 4.856797, 4.9267764, 4.9987, 5.067413, 5.127951, 5.185535, 5.2560735, 5.354977, 5.475951, 5.591744, 5.680469, 5.751954, 5.8259096, 5.9100475, 5.993385, 6.069859, 6.1671524, 6.3163943, 6.483028, 6.609789, 6.7047153, 6.7998734, 6.9308095, 7.1041684, 7.261921, 7.3826723, 7.4983025, 7.633347, 7.7784295, 7.891957, 8.118102, 8.376886, 8.498063, 8.664315, 8.906092, 9.109659, 9.289136, 9.4618225, 9.690038, 10.003964, 10.19943, 10.400776, 10.627715, 10.991999, 11.232977, 11.548224, 11.874796, 12.178522, 12.4670925, 12.857196, 13.149661, 13.6507635, 13.983232, 14.468948, 14.803707, 15.367827, 15.774136, 16.301783, 16.795715, 17.38493, 17.974209, 18.475489, 19.273796, 19.916893, 20.66156, 21.30725, 22.213963, 23.026419, 23.833818, 24.939749, 25.74968, 26.910486, 28.004938, 28.996088, 30.21908, 31.56843, 32.83184, 34.066963, 35.381, 37.499683, 38.091118, 39.352386, 41.103462, 44.277878, 43.79712, 46.015774, 45.703026, 50.21675, 51.608353, 53.488075, 55.463577, 57.55105, 59.807465, 62.437954, 65.148384, 68.17983, 72.14396, 75.29306, 79.94834, 84.17078};
    #endif
    //uint16_t bendLinear[1024] = {0, 0, 2, 9, 18, 26, 32, 37, 46, 58, 69, 79, 94, 113, 135, 159, 185, 216, 257, 298, 332, 362, 388, 405, 418, 433, 454, 474, 491, 502, 512, 523, 536, 549, 561, 572, 581, 588, 593, 600, 608, 616, 622, 629, 636, 643, 648, 652, 656, 662, 668, 674, 679, 684, 687, 689, 693, 697, 702, 706, 709, 711, 714, 718, 722, 725, 729, 732, 735, 738, 739, 741, 744, 747, 750, 752, 754, 756, 758, 761, 763, 766, 769, 770, 771, 773, 775, 777, 780, 782, 784, 786, 787, 788, 790, 792, 794, 795, 797, 798, 799, 801, 802, 804, 805, 807, 809, 810, 811, 812, 814, 815, 817, 818, 819, 819, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 836, 837, 838, 839, 840, 841, 843, 843, 844, 845, 846, 847, 848, 849, 849, 850, 851, 851, 853, 854, 854, 855, 856, 857, 857, 859, 859, 860, 861, 862, 862, 863, 863, 864, 864, 865, 866, 867, 868, 868, 869, 869, 870, 871, 872, 872, 873, 873, 873, 874, 874, 876, 877, 877, 878, 878, 878, 879, 880, 880, 881, 881, 882, 882, 883, 883, 884, 885, 886, 886, 886, 887, 888, 888, 889, 890, 890, 891, 891, 891, 891, 892, 892, 893, 894, 894, 895, 895, 896, 896, 897, 897, 897, 897, 898, 898, 899, 899, 900, 900, 901, 901, 901, 902, 903, 903, 904, 904, 904, 905, 905, 905, 906, 907, 907, 907, 907, 908, 909, 909, 910, 910, 911, 911, 911, 911, 911, 912, 912, 913, 913, 913, 914, 915, 915, 915, 915, 916, 916, 916, 917, 917, 917, 918, 918, 919, 919, 920, 920, 920, 920, 921, 922, 922, 922, 922, 922, 922, 923, 924, 924, 925, 925, 925, 925, 926, 926, 927, 927, 928, 928, 928, 928, 928, 929, 930, 930, 930, 931, 931, 932, 932, 933, 933, 933, 933, 933, 933, 934, 934, 935, 935, 935, 935, 936, 936, 937, 937, 937, 938, 938, 938, 938, 938, 938, 939, 940, 940, 941, 941, 941, 941, 942, 942, 942, 943, 943, 943, 943, 943, 944, 944, 945, 945, 945, 945, 946, 947, 947, 947, 947, 947, 948, 948, 948, 948, 949, 949, 950, 950, 950, 951, 951, 951, 952, 952, 952, 952, 952, 952, 953, 953, 953, 953, 954, 954, 954, 955, 955, 955, 955, 955, 956, 956, 956, 956, 957, 957, 957, 958, 958, 958, 959, 959, 959, 959, 960, 960, 960, 960, 960, 961, 961, 962, 962, 962, 962, 963, 963, 963, 963, 964, 964, 964, 964, 964, 964, 965, 965, 966, 967, 967, 967, 967, 968, 968, 968, 968, 968, 968, 968, 969, 969, 969, 969, 970, 970, 970, 971, 971, 971, 971, 971, 972, 972, 972, 972, 972, 972, 973, 973, 973, 974, 974, 974, 975, 975, 975, 975, 975, 975, 975, 976, 976, 976, 977, 977, 977, 977, 978, 978, 978, 979, 979, 979, 979, 979, 979, 979, 979, 980, 980, 980, 980, 981, 981, 982, 982, 982, 982, 982, 982, 982, 983, 983, 983, 983, 984, 984, 984, 984, 984, 984, 985, 985, 985, 985, 985, 985, 985, 986, 986, 986, 986, 987, 987, 987, 987, 987, 987, 987, 988, 988, 988, 988, 988, 989, 989, 989, 989, 990, 989, 990, 990, 990, 990, 990, 990, 990, 990, 991, 991, 992, 992, 992, 992, 992, 992, 992, 992, 992, 993, 993, 992, 992, 993, 994, 994, 994, 994, 994, 994, 995, 995, 995, 995, 995, 995, 995, 995, 995, 996, 996, 996, 996, 996, 996, 996, 997, 997, 997, 997, 997, 997, 997, 997, 998, 998, 998, 998, 999, 999, 999, 999, 999, 999, 999, 999, 1000, 1000, 1000, 1000, 1000, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1002, 1001, 1001, 1001, 1001, 1002, 1002, 1002, 1002, 1002, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1007, 1007, 1007, 1006, 1006, 1007, 1007, 1008, 1007, 1007, 1007, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1009, 1009, 1009, 1009, 1010, 1010, 1009, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1013, 1013, 1013, 1013, 1014, 1014, 1013, 1013, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1014, 1015, 1015, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1018, 1018, 1018, 1018, 1018, 1018, 1019, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1018, 1018, 1018, 1019, 1019, 1019, 1020, 1020, 1020, 1019, 1019, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1021, 1021, 1020, 1020, 1021, 1020, 1020, 1020, 1020, 1020, 1021, 1021, 1021, 1021, 1021, 1021, 1022, 1022, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1021, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1022, 1022, 1022, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1024, 1024, 1024, 1023, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023};
    #if SENSOR_TYPE == K66_I512

        // 0-90
       //int bendLinear[512] = {0, 139, 213, 237, 225, 194, 158, 132, 122, 124, 136, 155, 178, 203, 226, 246, 264, 279, 292, 304, 314, 323, 331, 339, 346, 353, 360, 367, 374, 381, 388, 395, 403, 411, 419, 428, 437, 445, 454, 462, 470, 477, 484, 491, 497, 502, 508, 513, 517, 522, 526, 530, 534, 538, 542, 546, 550, 554, 557, 561, 565, 569, 573, 577, 580, 584, 588, 592, 595, 599, 603, 607, 610, 614, 618, 621, 625, 628, 632, 636, 639, 643, 646, 649, 653, 656, 659, 663, 666, 669, 672, 675, 678, 682, 685, 687, 690, 693, 696, 699, 702, 704, 707, 710, 712, 715, 717, 720, 722, 725, 727, 729, 732, 734, 736, 738, 740, 742, 745, 747, 749, 751, 753, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 803, 805, 807, 810, 812, 815, 817, 819, 822, 824, 827, 830, 832, 835, 837, 840, 843, 845, 848, 850, 853, 856, 858, 861, 863, 866, 868, 871, 874, 876, 878, 881, 883, 886, 889, 891, 894, 897, 899, 902, 905, 908, 912, 915, 919, 922, 926, 931, 935, 939, 944, 949, 954, 960, 965, 971, 977, 983, 989, 995, 1002, 1008, 1014, 1020, 1026, 1032, 1038, 1044, 1049, 1055, 1060, 1065, 1070, 1074, 1079, 1083, 1087, 1092, 1096, 1099, 1103, 1107, 1111, 1114, 1118, 1122, 1125, 1129, 1133, 1137, 1141, 1145, 1149, 1153, 1158, 1163, 1168, 1173, 1179, 1185, 1191, 1198, 1205, 1212, 1220, 1228, 1236, 1244, 1253, 1261, 1270, 1278, 1287, 1295, 1303, 1310, 1317, 1324, 1331, 1337, 1344, 1350, 1356, 1362, 1368, 1375, 1381, 1388, 1395, 1402, 1409, 1416, 1424, 1431, 1438, 1445, 1452, 1459, 1466, 1472, 1479, 1487, 1495, 1503, 1513, 1524, 1535, 1549, 1563, 1577, 1592, 1607, 1621, 1635, 1648, 1659, 1670, 1681, 1691, 1701, 1711, 1722, 1733, 1744, 1756, 1768, 1781, 1794, 1807, 1820, 1833, 1845, 1856, 1867, 1877, 1888, 1900, 1914, 1930, 1950, 1971, 1994, 2016, 2036, 2053, 2068, 2081, 2094, 2107, 2121, 2136, 2152, 2167, 2182, 2196, 2210, 2226, 2245, 2270, 2300, 2331, 2360, 2386, 2406, 2425, 2441, 2458, 2476, 2497, 2523, 2554, 2586, 2617, 2644, 2667, 2688, 2708, 2730, 2753, 2779, 2807, 2832, 2852, 2873, 2905, 2956, 3011, 3050, 3074, 3094, 3120, 3154, 3197, 3243, 3284, 3317, 3348, 3382, 3416, 3445, 3478, 3528, 3590, 3642, 3682, 3713, 3746, 3787, 3828, 3869, 3930, 4002, 4051, 4090, 4139, 4204, 4271, 4323, 4377, 4434, 4488, 4539, 4607, 4681, 4738, 4787, 4898, 4970, 5031, 5091, 5169, 5268, 5333, 5390, 5444, 5595, 5656, 5743, 5827, 5935, 6006, 6115, 6252, 6329, 6428, 6544, 6628, 6727, 6903, 7017, 7098, 7251, 7354, 7522, 7694, 7757, 7965, 8088, 8274, 8383, 8544, 8677, 8849, 9080, 9217, 9375, 9641, 9798, 9971, 10196, 10360, 10557, 10872, 11002, 11094, 11493, 11723, 11953, 12265, 12403, 12628, 12881, 13062, 13653, 13586, 13868, 14030, 14327, 14692, 14965, 15221, 16121, 15764, 15946, 16434, 16753, 17040, 16639, 17705, 18283, 18175, 18789, 19007, 19474, 19762, 20193, 20456, 20953, 21502, 21775, 22227, 22732, 22693, 23719, 24140, 24823, 25641, 26266, 26937, 27413, 28161, 29107, 29582, 30645, 31927};    
       // 0-45
       int bendLinear[512] = {0, 266, 414, 471, 460, 409, 341, 283, 251, 243, 256, 284, 322, 367, 413, 456, 494, 527, 556, 581, 603, 622, 639, 655, 670, 684, 698, 711, 724, 737, 750, 763, 776, 790, 805, 820, 836, 852, 868, 884, 900, 916, 931, 945, 959, 972, 984, 995, 1005, 1016, 1025, 1034, 1043, 1051, 1059, 1066, 1074, 1081, 1088, 1095, 1102, 1110, 1117, 1124, 1131, 1138, 1145, 1152, 1160, 1167, 1174, 1181, 1188, 1195, 1202, 1209, 1216, 1223, 1230, 1237, 1244, 1250, 1257, 1264, 1270, 1277, 1283, 1290, 1296, 1303, 1309, 1315, 1321, 1328, 1334, 1340, 1346, 1351, 1357, 1363, 1369, 1374, 1380, 1385, 1390, 1396, 1401, 1406, 1411, 1416, 1421, 1426, 1431, 1435, 1440, 1445, 1449, 1454, 1458, 1462, 1466, 1471, 1475, 1479, 1483, 1487, 1490, 1494, 1498, 1502, 1505, 1509, 1513, 1516, 1520, 1524, 1527, 1531, 1535, 1538, 1542, 1545, 1549, 1553, 1556, 1560, 1564, 1567, 1571, 1575, 1579, 1583, 1587, 1591, 1595, 1599, 1603, 1607, 1612, 1616, 1621, 1625, 1630, 1634, 1639, 1644, 1648, 1653, 1658, 1663, 1668, 1673, 1677, 1682, 1687, 1692, 1697, 1702, 1707, 1712, 1717, 1721, 1726, 1731, 1736, 1741, 1745, 1750, 1755, 1759, 1764, 1769, 1774, 1778, 1783, 1788, 1794, 1799, 1804, 1810, 1816, 1822, 1828, 1835, 1842, 1849, 1857, 1864, 1873, 1881, 1890, 1900, 1910, 1920, 1931, 1941, 1952, 1964, 1975, 1987, 1998, 2010, 2022, 2033, 2045, 2056, 2067, 2078, 2089, 2100, 2110, 2120, 2129, 2138, 2147, 2155, 2163, 2171, 2179, 2187, 2194, 2201, 2209, 2216, 2223, 2230, 2236, 2243, 2250, 2257, 2264, 2272, 2279, 2286, 2294, 2302, 2311, 2319, 2329, 2338, 2348, 2359, 2370, 2382, 2394, 2408, 2421, 2436, 2451, 2466, 2482, 2498, 2513, 2529, 2545, 2561, 2577, 2592, 2607, 2621, 2634, 2647, 2660, 2672, 2684, 2696, 2707, 2719, 2730, 2742, 2754, 2766, 2779, 2792, 2805, 2819, 2832, 2846, 2860, 2873, 2887, 2900, 2913, 2926, 2938, 2951, 2964, 2978, 2993, 3010, 3028, 3049, 3071, 3096, 3122, 3150, 3178, 3205, 3233, 3259, 3284, 3306, 3328, 3348, 3367, 3386, 3405, 3425, 3445, 3465, 3487, 3509, 3532, 3555, 3579, 3604, 3628, 3653, 3676, 3699, 3720, 3739, 3758, 3779, 3801, 3827, 3858, 3895, 3935, 3977, 4019, 4058, 4093, 4122, 4149, 4173, 4197, 4222, 4249, 4277, 4306, 4335, 4363, 4389, 4416, 4444, 4479, 4523, 4576, 4633, 4691, 4743, 4787, 4824, 4857, 4888, 4919, 4954, 4994, 5043, 5101, 5161, 5220, 5273, 5318, 5358, 5397, 5436, 5478, 5523, 5573, 5624, 5671, 5708, 5748, 5807, 5901, 6006, 6086, 6136, 6174, 6217, 6275, 6348, 6432, 6516, 6588, 6648, 6707, 6772, 6835, 6889, 6950, 7041, 7156, 7261, 7341, 7404, 7462, 7532, 7612, 7686, 7772, 7900, 8028, 8113, 8186, 8279, 8403, 8529, 8630, 8729, 8835, 8941, 9035, 9145, 9285, 9416, 9505, 9627, 9843, 9956, 10078, 10187, 10335, 10524, 10647, 10763, 10842, 11111, 11262, 11419, 11554, 11755, 11933, 12060, 12310, 12537, 12682, 12873, 13090, 13242, 13444, 13733, 13993, 14144, 14367, 14631, 14894, 15282, 15422, 15636, 15997, 16248, 16600, 16788, 17097, 17351, 17674, 18192, 18340, 18655, 19175, 19426, 19831, 20094, 20565, 20928, 21221, 21585, 22144, 22616, 23017, 23446, 23854, 24495, 24702, 25222, 25558, 25992, 26341, 27464, 27526, 27794, 29114, 28917, 29645, 29953, 30443, 32254, 31508, 31876};
       // 0-60
       //int bendLinear[512] = {};
    #endif 
    #if SENSOR_TYPE == K66_I1024
        uint16_t bendLinear[1024] = {0, 144, 255, 336, 390, 421, 433, 429, 412, 386, 355, 321, 289, 262, 242, 230, 223, 223, 227, 236, 249, 265, 284, 305, 327, 349, 372, 393, 414, 433, 451, 468, 483, 498, 511, 524, 535, 546, 556, 565, 574, 583, 591, 598, 606, 613, 620, 627, 634, 640, 647, 653, 659, 666, 672, 678, 684, 691, 697, 704, 710, 717, 724, 731, 738, 745, 753, 760, 768, 776, 784, 791, 799, 807, 815, 823, 831, 838, 846, 853, 860, 867, 874, 880, 886, 892, 898, 904, 909, 915, 920, 925, 930, 934, 939, 943, 948, 952, 956, 960, 964, 968, 971, 975, 979, 982, 986, 989, 993, 996, 1000, 1003, 1007, 1010, 1014, 1017, 1021, 1024, 1028, 1031, 1035, 1038, 1042, 1045, 1049, 1052, 1056, 1059, 1063, 1066, 1070, 1073, 1077, 1080, 1083, 1087, 1090, 1094, 1097, 1101, 1104, 1107, 1111, 1114, 1118, 1121, 1124, 1128, 1131, 1134, 1138, 1141, 1144, 1148, 1151, 1154, 1157, 1161, 1164, 1167, 1170, 1173, 1177, 1180, 1183, 1186, 1189, 1192, 1195, 1198, 1201, 1204, 1207, 1210, 1213, 1216, 1219, 1222, 1225, 1228, 1231, 1234, 1237, 1240, 1242, 1245, 1248, 1251, 1253, 1256, 1259, 1262, 1264, 1267, 1269, 1272, 1275, 1277, 1280, 1282, 1285, 1287, 1290, 1292, 1295, 1297, 1300, 1302, 1304, 1307, 1309, 1311, 1314, 1316, 1318, 1320, 1323, 1325, 1327, 1329, 1331, 1333, 1336, 1338, 1340, 1342, 1344, 1346, 1348, 1350, 1352, 1354, 1356, 1358, 1360, 1361, 1363, 1365, 1367, 1369, 1371, 1373, 1374, 1376, 1378, 1380, 1382, 1383, 1385, 1387, 1389, 1391, 1392, 1394, 1396, 1398, 1399, 1401, 1403, 1405, 1406, 1408, 1410, 1412, 1413, 1415, 1417, 1419, 1420, 1422, 1424, 1426, 1428, 1429, 1431, 1433, 1435, 1437, 1439, 1440, 1442, 1444, 1446, 1448, 1450, 1452, 1454, 1456, 1458, 1460, 1462, 1464, 1466, 1468, 1470, 1472, 1474, 1476, 1478, 1481, 1483, 1485, 1487, 1489, 1492, 1494, 1496, 1498, 1501, 1503, 1505, 1507, 1510, 1512, 1514, 1517, 1519, 1521, 1524, 1526, 1529, 1531, 1533, 1536, 1538, 1540, 1543, 1545, 1548, 1550, 1552, 1555, 1557, 1560, 1562, 1564, 1567, 1569, 1571, 1574, 1576, 1579, 1581, 1583, 1586, 1588, 1590, 1593, 1595, 1597, 1600, 1602, 1604, 1606, 1609, 1611, 1613, 1615, 1618, 1620, 1622, 1625, 1627, 1629, 1632, 1634, 1637, 1639, 1642, 1644, 1647, 1650, 1652, 1655, 1658, 1661, 1663, 1666, 1669, 1673, 1676, 1679, 1682, 1686, 1689, 1693, 1696, 1700, 1704, 1708, 1712, 1716, 1720, 1724, 1729, 1733, 1738, 1743, 1747, 1752, 1757, 1763, 1768, 1773, 1778, 1784, 1789, 1795, 1800, 1806, 1811, 1817, 1823, 1828, 1834, 1840, 1845, 1851, 1857, 1862, 1868, 1874, 1879, 1885, 1890, 1896, 1901, 1906, 1911, 1917, 1922, 1927, 1932, 1936, 1941, 1946, 1950, 1955, 1959, 1963, 1968, 1972, 1976, 1980, 1984, 1987, 1991, 1995, 1999, 2002, 2006, 2010, 2013, 2017, 2020, 2024, 2027, 2030, 2034, 2037, 2041, 2044, 2047, 2051, 2054, 2058, 2061, 2064, 2068, 2071, 2075, 2078, 2082, 2085, 2089, 2093, 2096, 2100, 2104, 2108, 2112, 2116, 2120, 2125, 2129, 2134, 2138, 2143, 2148, 2153, 2158, 2164, 2169, 2175, 2181, 2187, 2193, 2199, 2206, 2213, 2219, 2226, 2234, 2241, 2248, 2256, 2263, 2271, 2279, 2286, 2294, 2302, 2310, 2318, 2325, 2333, 2341, 2348, 2356, 2363, 2371, 2378, 2385, 2392, 2399, 2406, 2412, 2419, 2425, 2431, 2437, 2443, 2449, 2455, 2460, 2466, 2472, 2477, 2483, 2489, 2494, 2500, 2506, 2511, 2517, 2523, 2529, 2535, 2541, 2548, 2554, 2560, 2567, 2573, 2580, 2587, 2593, 2600, 2607, 2613, 2620, 2627, 2633, 2640, 2646, 2653, 2659, 2665, 2672, 2678, 2684, 2690, 2696, 2702, 2709, 2715, 2722, 2729, 2737, 2744, 2753, 2761, 2770, 2780, 2790, 2800, 2812, 2823, 2836, 2848, 2861, 2875, 2888, 2902, 2915, 2929, 2942, 2956, 2969, 2982, 2994, 3006, 3017, 3028, 3038, 3049, 3058, 3068, 3078, 3087, 3096, 3105, 3115, 3124, 3133, 3143, 3153, 3163, 3173, 3183, 3194, 3205, 3216, 3227, 3238, 3249, 3261, 3273, 3285, 3297, 3309, 3321, 3332, 3344, 3356, 3367, 3378, 3389, 3399, 3409, 3419, 3428, 3437, 3447, 3457, 3468, 3479, 3491, 3504, 3518, 3534, 3551, 3570, 3589, 3610, 3630, 3651, 3671, 3691, 3710, 3728, 3744, 3760, 3774, 3787, 3799, 3811, 3823, 3835, 3846, 3858, 3871, 3884, 3898, 3912, 3926, 3940, 3954, 3968, 3982, 3996, 4008, 4021, 4034, 4047, 4060, 4076, 4093, 4111, 4133, 4157, 4183, 4211, 4239, 4268, 4296, 4322, 4346, 4368, 4388, 4407, 4424, 4440, 4455, 4470, 4485, 4500, 4516, 4533, 4552, 4572, 4595, 4621, 4648, 4677, 4707, 4736, 4765, 4792, 4818, 4841, 4863, 4883, 4903, 4922, 4941, 4960, 4979, 4999, 5020, 5041, 5065, 5089, 5114, 5139, 5163, 5186, 5206, 5223, 5241, 5261, 5287, 5320, 5362, 5412, 5464, 5513, 5554, 5585, 5609, 5628, 5646, 5665, 5687, 5713, 5743, 5776, 5813, 5854, 5896, 5937, 5977, 6013, 6044, 6073, 6101, 6130, 6161, 6193, 6225, 6255, 6282, 6308, 6335, 6368, 6409, 6460, 6516, 6573, 6625, 6669, 6708, 6741, 6771, 6800, 6828, 6860, 6895, 6934, 6973, 7010, 7046, 7085, 7135, 7197, 7265, 7328, 7378, 7418, 7452, 7489, 7530, 7578, 7635, 7699, 7762, 7820, 7870, 7917, 7964, 8014, 8066, 8119, 8170, 8218, 8263, 8311, 8369, 8435, 8504, 8571, 8631, 8677, 8714, 8766, 8858, 8970, 9050, 9101, 9150, 9213, 9273, 9322, 9379, 9465, 9565, 9646, 9706, 9765, 9824, 9869, 9901, 9969, 10116, 10245, 10300, 10357, 10445, 10516, 10579, 10669, 10775, 10868, 10941, 10998, 11075, 11197, 11339, 11449, 11520, 11590, 11673, 11771, 11881, 11983, 12051, 12136, 12266, 12317, 12424, 12640, 12763, 12849, 12920, 12998, 13110, 13278, 13387, 13467, 13631, 13774, 14002, 14088, 14128, 14205, 14385, 14584, 14689, 14809, 14971, 15150, 15276, 15351, 15490, 15645, 15765, 15889, 15988, 16203, 16562, 16626, 16666, 16877, 17025, 17166, 17461, 17654, 17754, 17940, 18140, 18259, 18402, 18670, 18854, 18970, 19222, 19331, 19466, 19908, 19917, 20146, 20352, 20314, 20855, 21046, 21312, 21465, 21553, 21888, 21959, 22459, 22512, 22711, 22989, 23123, 23308, 23587, 23825, 23919, 24154, 25000, 25125, 24877, 25215, 25394, 25514, 25690, 26301, 26235, 26596, 26903, 27064, 27402, 27633, 27872, 28200, 29519, 28489, 28866, 28764, 29198, 29811, 30092, 30376, 30677, 31013, 31201, 31500, 30469, 32358, 32421, 32737, 33478, 33358, 33281, 33877, 34406, 34668, 34803, 35166, 35659, 35944, 36187, 36736, 36976, 37166, 37458, 38118, 38367, 38312, 39373, 38793, 39872, 40313, 40700, 40930, 41625, 42093, 41553, 42859, 43432, 44912, 44203, 44729, 45453, 46253, 46951, 46738, 48096, 49067, 49325, 48905, 50195, 51626, 51567, 52957, 53299, 53774, 54168, 55418, 56114, 57432, 58462, 59638};
    #endif

    #if SENSOR_TYPE == K66_F256
        //float bendLinear[256] = {0.0, 1.3362737, 1.5718609, 1.2873163, 1.0467643, 1.0776174, 1.29198, 1.5898126, 1.8751926, 2.1111655, 2.3048625, 2.4644747, 2.5981846, 2.7134235, 2.8163588, 2.9130368, 3.0095038, 3.111806, 3.2248423, 3.3460913, 3.4700794, 3.5913258, 3.7043498, 3.805106, 3.8943312, 3.973758, 4.0451183, 4.1101446, 4.1705685, 4.228122, 4.2845287, 4.3408637, 4.397156, 4.453337, 4.5093417, 4.5651026, 4.620552, 4.675624, 4.7302504, 4.784365, 4.8379016, 4.890792, 4.94297, 4.9943676, 5.044919, 5.094557, 5.143215, 5.190853, 5.2374578, 5.283016, 5.3275166, 5.3709455, 5.413292, 5.454542, 5.494685, 5.5337076, 5.571597, 5.608342, 5.6439295, 5.678347, 5.71159, 5.7437296, 5.774886, 5.80518, 5.834731, 5.86366, 5.8920865, 5.9201317, 5.9479146, 5.9755564, 6.003177, 6.0308967, 6.058836, 6.087115, 6.115854, 6.145173, 6.1751924, 6.2060323, 6.2378135, 6.2706537, 6.304576, 6.339477, 6.3752446, 6.411766, 6.4489293, 6.486622, 6.524731, 6.5631447, 6.6017504, 6.6404357, 6.6790886, 6.717596, 6.755846, 6.793726, 6.831124, 6.8680935, 6.905154, 6.9429064, 6.9819508, 7.0228868, 7.0663157, 7.1128373, 7.1630516, 7.2175603, 7.2769623, 7.3418584, 7.412845, 7.4899697, 7.5721664, 7.658238, 7.746985, 7.837209, 7.927712, 8.017295, 8.104759, 8.188907, 8.268543, 8.343053, 8.412926, 8.478783, 8.541243, 8.600924, 8.658444, 8.714426, 8.7694845, 8.824242, 8.87952, 8.936718, 8.997336, 9.062874, 9.134831, 9.214707, 9.304003, 9.404213, 9.515608, 9.635451, 9.760554, 9.887731, 10.01379, 10.135547, 10.249812, 10.354711, 10.452389, 10.545759, 10.637736, 10.731235, 10.82916, 10.932896, 11.040444, 11.149356, 11.257177, 11.361458, 11.460941, 11.562182, 11.674875, 11.808722, 11.973409, 12.171766, 12.388915, 12.607153, 12.80878, 12.982154, 13.136717, 13.286493, 13.445185, 13.617895, 13.8004055, 13.988024, 14.175468, 14.3563595, 14.52421, 14.682018, 14.860215, 15.0941515, 15.39915, 15.725295, 16.009987, 16.230988, 16.43218, 16.658522, 16.901472, 17.120779, 17.32469, 17.612307, 18.049906, 18.49761, 18.80876, 19.043583, 19.304153, 19.661276, 20.128864, 20.57278, 20.911486, 21.227686, 21.58624, 21.99354, 22.335306, 22.731045, 23.425081, 23.980959, 24.369522, 24.875309, 25.533644, 26.01085, 26.538519, 27.049759, 27.718956, 28.491835, 29.085375, 29.705883, 30.152542, 31.283813, 31.91716, 32.583828, 33.728516, 34.56342, 35.211643, 36.438507, 37.125027, 38.435425, 39.469326, 40.51256, 41.826878, 42.77709, 44.3802, 45.440502, 47.12347, 48.645958, 50.103443, 51.7648, 53.670177, 55.404594, 57.50695, 59.98943, 62.490417, 65.27857, 67.404236, 70.2853, 72.95631, 76.89145, 80.977516, 85.22518, 88.17303, 93.098305, 98.18673, 103.77337, 109.73933, 117.04582, 124.91092, 133.1379, 144.00456, 153.97763, 167.44847, 181.64912, 202.78278, 225.33173};
        float bendLinear[256] = {0.0, 0.5853293, 0.6179469, 0.4337268, 0.33499995, 0.37395728, 0.48979446, 0.6212143, 0.7252003, 0.80275685, 0.86138046, 0.90856105, 0.9502539, 0.98892194, 1.026545, 1.0651032, 1.1065735, 1.1518514, 1.1990682, 1.24592, 1.2901027, 1.3295383, 1.3640413, 1.3943709, 1.4212935, 1.4455752, 1.4679823, 1.4892809, 1.510222, 1.5311804, 1.5521433, 1.5730804, 1.5939612, 1.6147552, 1.6354318, 1.6559606, 1.6763111, 1.696453, 1.7163557, 1.7359886, 1.7553214, 1.7743235, 1.7929645, 1.8112148, 1.829059, 1.8464916, 1.8635076, 1.8801019, 1.8962694, 1.9120051, 1.9273037, 1.9421601, 1.9565694, 1.9705263, 1.984026, 1.997063, 2.0096369, 2.0217805, 2.0335445, 2.044979, 2.0561342, 2.0670605, 2.077808, 2.088427, 2.0989678, 2.1094809, 2.1200163, 2.1306243, 2.1413553, 2.1522593, 2.1633868, 2.1747882, 2.1865134, 2.198613, 2.2111259, 2.2240279, 2.2372727, 2.250814, 2.2646055, 2.278601, 2.292754, 2.3070183, 2.3213477, 2.3356957, 2.3500164, 2.364263, 2.3783894, 2.3923495, 2.4061012, 2.4197397, 2.4335175, 2.4476955, 2.4625354, 2.4782982, 2.495245, 2.513637, 2.5337358, 2.5558023, 2.580098, 2.6068816, 2.6361613, 2.667452, 2.7002127, 2.7339022, 2.767979, 2.8019016, 2.8351288, 2.8671193, 2.8973317, 2.9253325, 2.9512565, 2.9754252, 2.9981601, 3.0197835, 3.0406165, 3.0609813, 3.0811992, 3.101592, 3.1225283, 3.144524, 3.1681252, 3.193877, 3.222325, 3.254015, 3.2894924, 3.3291888, 3.3724558, 3.4180481, 3.4647148, 3.5112045, 3.556266, 3.5986485, 3.6374638, 3.6734293, 3.7077067, 3.7414567, 3.775841, 3.8120086, 3.8503382, 3.8899872, 3.930005, 3.9694402, 4.0073485, 4.044154, 4.08335, 4.128848, 4.18456, 4.2535996, 4.3323307, 4.4137187, 4.490704, 4.557546, 4.616325, 4.6719913, 4.729393, 4.7909737, 4.856797, 4.9267764, 4.9987, 5.067413, 5.127951, 5.185535, 5.2560735, 5.354977, 5.475951, 5.591744, 5.680469, 5.751954, 5.8259096, 5.9100475, 5.993385, 6.069859, 6.1671524, 6.3163943, 6.483028, 6.609789, 6.7047153, 6.7998734, 6.9308095, 7.1041684, 7.261921, 7.3826723, 7.4983025, 7.633347, 7.7784295, 7.891957, 8.118102, 8.376886, 8.498063, 8.664315, 8.906092, 9.109659, 9.289136, 9.4618225, 9.690038, 10.003964, 10.19943, 10.400776, 10.627715, 10.991999, 11.232977, 11.548224, 11.874796, 12.178522, 12.4670925, 12.857196, 13.149661, 13.6507635, 13.983232, 14.468948, 14.803707, 15.367827, 15.774136, 16.301783, 16.795715, 17.38493, 17.974209, 18.475489, 19.273796, 19.916893, 20.66156, 21.30725, 22.213963, 23.026419, 23.833818, 24.939749, 25.74968, 26.910486, 28.004938, 28.996088, 30.21908, 31.56843, 32.83184, 34.066963, 35.381, 37.499683, 38.091118, 39.352386, 41.103462, 44.277878, 43.79712, 46.015774, 45.703026, 50.21675, 51.608353, 53.488075, 55.463577, 57.55105, 59.807465, 62.437954, 65.148384, 68.17983, 72.14396, 75.29306, 79.94834, 84.17078};
    #endif
    #if SENSOR_TYPE == K66_F900
        //float bendLinear[256] = {0.0, 1.3362737, 1.5718609, 1.2873163, 1.0467643, 1.0776174, 1.29198, 1.5898126, 1.8751926, 2.1111655, 2.3048625, 2.4644747, 2.5981846, 2.7134235, 2.8163588, 2.9130368, 3.0095038, 3.111806, 3.2248423, 3.3460913, 3.4700794, 3.5913258, 3.7043498, 3.805106, 3.8943312, 3.973758, 4.0451183, 4.1101446, 4.1705685, 4.228122, 4.2845287, 4.3408637, 4.397156, 4.453337, 4.5093417, 4.5651026, 4.620552, 4.675624, 4.7302504, 4.784365, 4.8379016, 4.890792, 4.94297, 4.9943676, 5.044919, 5.094557, 5.143215, 5.190853, 5.2374578, 5.283016, 5.3275166, 5.3709455, 5.413292, 5.454542, 5.494685, 5.5337076, 5.571597, 5.608342, 5.6439295, 5.678347, 5.71159, 5.7437296, 5.774886, 5.80518, 5.834731, 5.86366, 5.8920865, 5.9201317, 5.9479146, 5.9755564, 6.003177, 6.0308967, 6.058836, 6.087115, 6.115854, 6.145173, 6.1751924, 6.2060323, 6.2378135, 6.2706537, 6.304576, 6.339477, 6.3752446, 6.411766, 6.4489293, 6.486622, 6.524731, 6.5631447, 6.6017504, 6.6404357, 6.6790886, 6.717596, 6.755846, 6.793726, 6.831124, 6.8680935, 6.905154, 6.9429064, 6.9819508, 7.0228868, 7.0663157, 7.1128373, 7.1630516, 7.2175603, 7.2769623, 7.3418584, 7.412845, 7.4899697, 7.5721664, 7.658238, 7.746985, 7.837209, 7.927712, 8.017295, 8.104759, 8.188907, 8.268543, 8.343053, 8.412926, 8.478783, 8.541243, 8.600924, 8.658444, 8.714426, 8.7694845, 8.824242, 8.87952, 8.936718, 8.997336, 9.062874, 9.134831, 9.214707, 9.304003, 9.404213, 9.515608, 9.635451, 9.760554, 9.887731, 10.01379, 10.135547, 10.249812, 10.354711, 10.452389, 10.545759, 10.637736, 10.731235, 10.82916, 10.932896, 11.040444, 11.149356, 11.257177, 11.361458, 11.460941, 11.562182, 11.674875, 11.808722, 11.973409, 12.171766, 12.388915, 12.607153, 12.80878, 12.982154, 13.136717, 13.286493, 13.445185, 13.617895, 13.8004055, 13.988024, 14.175468, 14.3563595, 14.52421, 14.682018, 14.860215, 15.0941515, 15.39915, 15.725295, 16.009987, 16.230988, 16.43218, 16.658522, 16.901472, 17.120779, 17.32469, 17.612307, 18.049906, 18.49761, 18.80876, 19.043583, 19.304153, 19.661276, 20.128864, 20.57278, 20.911486, 21.227686, 21.58624, 21.99354, 22.335306, 22.731045, 23.425081, 23.980959, 24.369522, 24.875309, 25.533644, 26.01085, 26.538519, 27.049759, 27.718956, 28.491835, 29.085375, 29.705883, 30.152542, 31.283813, 31.91716, 32.583828, 33.728516, 34.56342, 35.211643, 36.438507, 37.125027, 38.435425, 39.469326, 40.51256, 41.826878, 42.77709, 44.3802, 45.440502, 47.12347, 48.645958, 50.103443, 51.7648, 53.670177, 55.404594, 57.50695, 59.98943, 62.490417, 65.27857, 67.404236, 70.2853, 72.95631, 76.89145, 80.977516, 85.22518, 88.17303, 93.098305, 98.18673, 103.77337, 109.73933, 117.04582, 124.91092, 133.1379, 144.00456, 153.97763, 167.44847, 181.64912, 202.78278, 225.33173};
        float bendLinear[256] = {0.0, 0.5853293, 0.6179469, 0.4337268, 0.33499995, 0.37395728, 0.48979446, 0.6212143, 0.7252003, 0.80275685, 0.86138046, 0.90856105, 0.9502539, 0.98892194, 1.026545, 1.0651032, 1.1065735, 1.1518514, 1.1990682, 1.24592, 1.2901027, 1.3295383, 1.3640413, 1.3943709, 1.4212935, 1.4455752, 1.4679823, 1.4892809, 1.510222, 1.5311804, 1.5521433, 1.5730804, 1.5939612, 1.6147552, 1.6354318, 1.6559606, 1.6763111, 1.696453, 1.7163557, 1.7359886, 1.7553214, 1.7743235, 1.7929645, 1.8112148, 1.829059, 1.8464916, 1.8635076, 1.8801019, 1.8962694, 1.9120051, 1.9273037, 1.9421601, 1.9565694, 1.9705263, 1.984026, 1.997063, 2.0096369, 2.0217805, 2.0335445, 2.044979, 2.0561342, 2.0670605, 2.077808, 2.088427, 2.0989678, 2.1094809, 2.1200163, 2.1306243, 2.1413553, 2.1522593, 2.1633868, 2.1747882, 2.1865134, 2.198613, 2.2111259, 2.2240279, 2.2372727, 2.250814, 2.2646055, 2.278601, 2.292754, 2.3070183, 2.3213477, 2.3356957, 2.3500164, 2.364263, 2.3783894, 2.3923495, 2.4061012, 2.4197397, 2.4335175, 2.4476955, 2.4625354, 2.4782982, 2.495245, 2.513637, 2.5337358, 2.5558023, 2.580098, 2.6068816, 2.6361613, 2.667452, 2.7002127, 2.7339022, 2.767979, 2.8019016, 2.8351288, 2.8671193, 2.8973317, 2.9253325, 2.9512565, 2.9754252, 2.9981601, 3.0197835, 3.0406165, 3.0609813, 3.0811992, 3.101592, 3.1225283, 3.144524, 3.1681252, 3.193877, 3.222325, 3.254015, 3.2894924, 3.3291888, 3.3724558, 3.4180481, 3.4647148, 3.5112045, 3.556266, 3.5986485, 3.6374638, 3.6734293, 3.7077067, 3.7414567, 3.775841, 3.8120086, 3.8503382, 3.8899872, 3.930005, 3.9694402, 4.0073485, 4.044154, 4.08335, 4.128848, 4.18456, 4.2535996, 4.3323307, 4.4137187, 4.490704, 4.557546, 4.616325, 4.6719913, 4.729393, 4.7909737, 4.856797, 4.9267764, 4.9987, 5.067413, 5.127951, 5.185535, 5.2560735, 5.354977, 5.475951, 5.591744, 5.680469, 5.751954, 5.8259096, 5.9100475, 5.993385, 6.069859, 6.1671524, 6.3163943, 6.483028, 6.609789, 6.7047153, 6.7998734, 6.9308095, 7.1041684, 7.261921, 7.3826723, 7.4983025, 7.633347, 7.7784295, 7.891957, 8.118102, 8.376886, 8.498063, 8.664315, 8.906092, 9.109659, 9.289136, 9.4618225, 9.690038, 10.003964, 10.19943, 10.400776, 10.627715, 10.991999, 11.232977, 11.548224, 11.874796, 12.178522, 12.4670925, 12.857196, 13.149661, 13.6507635, 13.983232, 14.468948, 14.803707, 15.367827, 15.774136, 16.301783, 16.795715, 17.38493, 17.974209, 18.475489, 19.273796, 19.916893, 20.66156, 21.30725, 22.213963, 23.026419, 23.833818, 24.939749, 25.74968, 26.910486, 28.004938, 28.996088, 30.21908, 31.56843, 32.83184, 34.066963, 35.381, 37.499683, 38.091118, 39.352386, 41.103462, 44.277878, 43.79712, 46.015774, 45.703026, 50.21675, 51.608353, 53.488075, 55.463577, 57.55105, 59.807465, 62.437954, 65.148384, 68.17983, 72.14396, 75.29306, 79.94834, 84.17078};
    #endif
    //uint16_t bendLinear[1024] = {0, 0, 2, 9, 18, 26, 32, 37, 46, 58, 69, 79, 94, 113, 135, 159, 185, 216, 257, 298, 332, 362, 388, 405, 418, 433, 454, 474, 491, 502, 512, 523, 536, 549, 561, 572, 581, 588, 593, 600, 608, 616, 622, 629, 636, 643, 648, 652, 656, 662, 668, 674, 679, 684, 687, 689, 693, 697, 702, 706, 709, 711, 714, 718, 722, 725, 729, 732, 735, 738, 739, 741, 744, 747, 750, 752, 754, 756, 758, 761, 763, 766, 769, 770, 771, 773, 775, 777, 780, 782, 784, 786, 787, 788, 790, 792, 794, 795, 797, 798, 799, 801, 802, 804, 805, 807, 809, 810, 811, 812, 814, 815, 817, 818, 819, 819, 821, 822, 823, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 836, 837, 838, 839, 840, 841, 843, 843, 844, 845, 846, 847, 848, 849, 849, 850, 851, 851, 853, 854, 854, 855, 856, 857, 857, 859, 859, 860, 861, 862, 862, 863, 863, 864, 864, 865, 866, 867, 868, 868, 869, 869, 870, 871, 872, 872, 873, 873, 873, 874, 874, 876, 877, 877, 878, 878, 878, 879, 880, 880, 881, 881, 882, 882, 883, 883, 884, 885, 886, 886, 886, 887, 888, 888, 889, 890, 890, 891, 891, 891, 891, 892, 892, 893, 894, 894, 895, 895, 896, 896, 897, 897, 897, 897, 898, 898, 899, 899, 900, 900, 901, 901, 901, 902, 903, 903, 904, 904, 904, 905, 905, 905, 906, 907, 907, 907, 907, 908, 909, 909, 910, 910, 911, 911, 911, 911, 911, 912, 912, 913, 913, 913, 914, 915, 915, 915, 915, 916, 916, 916, 917, 917, 917, 918, 918, 919, 919, 920, 920, 920, 920, 921, 922, 922, 922, 922, 922, 922, 923, 924, 924, 925, 925, 925, 925, 926, 926, 927, 927, 928, 928, 928, 928, 928, 929, 930, 930, 930, 931, 931, 932, 932, 933, 933, 933, 933, 933, 933, 934, 934, 935, 935, 935, 935, 936, 936, 937, 937, 937, 938, 938, 938, 938, 938, 938, 939, 940, 940, 941, 941, 941, 941, 942, 942, 942, 943, 943, 943, 943, 943, 944, 944, 945, 945, 945, 945, 946, 947, 947, 947, 947, 947, 948, 948, 948, 948, 949, 949, 950, 950, 950, 951, 951, 951, 952, 952, 952, 952, 952, 952, 953, 953, 953, 953, 954, 954, 954, 955, 955, 955, 955, 955, 956, 956, 956, 956, 957, 957, 957, 958, 958, 958, 959, 959, 959, 959, 960, 960, 960, 960, 960, 961, 961, 962, 962, 962, 962, 963, 963, 963, 963, 964, 964, 964, 964, 964, 964, 965, 965, 966, 967, 967, 967, 967, 968, 968, 968, 968, 968, 968, 968, 969, 969, 969, 969, 970, 970, 970, 971, 971, 971, 971, 971, 972, 972, 972, 972, 972, 972, 973, 973, 973, 974, 974, 974, 975, 975, 975, 975, 975, 975, 975, 976, 976, 976, 977, 977, 977, 977, 978, 978, 978, 979, 979, 979, 979, 979, 979, 979, 979, 980, 980, 980, 980, 981, 981, 982, 982, 982, 982, 982, 982, 982, 983, 983, 983, 983, 984, 984, 984, 984, 984, 984, 985, 985, 985, 985, 985, 985, 985, 986, 986, 986, 986, 987, 987, 987, 987, 987, 987, 987, 988, 988, 988, 988, 988, 989, 989, 989, 989, 990, 989, 990, 990, 990, 990, 990, 990, 990, 990, 991, 991, 992, 992, 992, 992, 992, 992, 992, 992, 992, 993, 993, 992, 992, 993, 994, 994, 994, 994, 994, 994, 995, 995, 995, 995, 995, 995, 995, 995, 995, 996, 996, 996, 996, 996, 996, 996, 997, 997, 997, 997, 997, 997, 997, 997, 998, 998, 998, 998, 999, 999, 999, 999, 999, 999, 999, 999, 1000, 1000, 1000, 1000, 1000, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1002, 1001, 1001, 1001, 1001, 1002, 1002, 1002, 1002, 1002, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1003, 1004, 1004, 1004, 1004, 1004, 1004, 1004, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1005, 1006, 1006, 1006, 1006, 1006, 1006, 1006, 1007, 1007, 1007, 1006, 1006, 1007, 1007, 1008, 1007, 1007, 1007, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1008, 1009, 1009, 1009, 1009, 1010, 1010, 1009, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1010, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1011, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1012, 1013, 1013, 1013, 1013, 1014, 1014, 1013, 1013, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1014, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1015, 1014, 1015, 1015, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1016, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1017, 1018, 1018, 1018, 1018, 1018, 1018, 1019, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1018, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1019, 1018, 1018, 1018, 1019, 1019, 1019, 1020, 1020, 1020, 1019, 1019, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1020, 1021, 1021, 1020, 1020, 1021, 1020, 1020, 1020, 1020, 1020, 1021, 1021, 1021, 1021, 1021, 1021, 1022, 1022, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1021, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1021, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1022, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1022, 1022, 1022, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1024, 1024, 1024, 1023, 1024, 1024, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1023, 1024, 1024, 1024, 1023, 1023, 1023, 1023, 1023, 1023};
    #if SENSOR_TYPE == K66_I512
        // 0-90
       //int bendLinear[512] = {0, 139, 213, 237, 225, 194, 158, 132, 122, 124, 136, 155, 178, 203, 226, 246, 264, 279, 292, 304, 314, 323, 331, 339, 346, 353, 360, 367, 374, 381, 388, 395, 403, 411, 419, 428, 437, 445, 454, 462, 470, 477, 484, 491, 497, 502, 508, 513, 517, 522, 526, 530, 534, 538, 542, 546, 550, 554, 557, 561, 565, 569, 573, 577, 580, 584, 588, 592, 595, 599, 603, 607, 610, 614, 618, 621, 625, 628, 632, 636, 639, 643, 646, 649, 653, 656, 659, 663, 666, 669, 672, 675, 678, 682, 685, 687, 690, 693, 696, 699, 702, 704, 707, 710, 712, 715, 717, 720, 722, 725, 727, 729, 732, 734, 736, 738, 740, 742, 745, 747, 749, 751, 753, 755, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 803, 805, 807, 810, 812, 815, 817, 819, 822, 824, 827, 830, 832, 835, 837, 840, 843, 845, 848, 850, 853, 856, 858, 861, 863, 866, 868, 871, 874, 876, 878, 881, 883, 886, 889, 891, 894, 897, 899, 902, 905, 908, 912, 915, 919, 922, 926, 931, 935, 939, 944, 949, 954, 960, 965, 971, 977, 983, 989, 995, 1002, 1008, 1014, 1020, 1026, 1032, 1038, 1044, 1049, 1055, 1060, 1065, 1070, 1074, 1079, 1083, 1087, 1092, 1096, 1099, 1103, 1107, 1111, 1114, 1118, 1122, 1125, 1129, 1133, 1137, 1141, 1145, 1149, 1153, 1158, 1163, 1168, 1173, 1179, 1185, 1191, 1198, 1205, 1212, 1220, 1228, 1236, 1244, 1253, 1261, 1270, 1278, 1287, 1295, 1303, 1310, 1317, 1324, 1331, 1337, 1344, 1350, 1356, 1362, 1368, 1375, 1381, 1388, 1395, 1402, 1409, 1416, 1424, 1431, 1438, 1445, 1452, 1459, 1466, 1472, 1479, 1487, 1495, 1503, 1513, 1524, 1535, 1549, 1563, 1577, 1592, 1607, 1621, 1635, 1648, 1659, 1670, 1681, 1691, 1701, 1711, 1722, 1733, 1744, 1756, 1768, 1781, 1794, 1807, 1820, 1833, 1845, 1856, 1867, 1877, 1888, 1900, 1914, 1930, 1950, 1971, 1994, 2016, 2036, 2053, 2068, 2081, 2094, 2107, 2121, 2136, 2152, 2167, 2182, 2196, 2210, 2226, 2245, 2270, 2300, 2331, 2360, 2386, 2406, 2425, 2441, 2458, 2476, 2497, 2523, 2554, 2586, 2617, 2644, 2667, 2688, 2708, 2730, 2753, 2779, 2807, 2832, 2852, 2873, 2905, 2956, 3011, 3050, 3074, 3094, 3120, 3154, 3197, 3243, 3284, 3317, 3348, 3382, 3416, 3445, 3478, 3528, 3590, 3642, 3682, 3713, 3746, 3787, 3828, 3869, 3930, 4002, 4051, 4090, 4139, 4204, 4271, 4323, 4377, 4434, 4488, 4539, 4607, 4681, 4738, 4787, 4898, 4970, 5031, 5091, 5169, 5268, 5333, 5390, 5444, 5595, 5656, 5743, 5827, 5935, 6006, 6115, 6252, 6329, 6428, 6544, 6628, 6727, 6903, 7017, 7098, 7251, 7354, 7522, 7694, 7757, 7965, 8088, 8274, 8383, 8544, 8677, 8849, 9080, 9217, 9375, 9641, 9798, 9971, 10196, 10360, 10557, 10872, 11002, 11094, 11493, 11723, 11953, 12265, 12403, 12628, 12881, 13062, 13653, 13586, 13868, 14030, 14327, 14692, 14965, 15221, 16121, 15764, 15946, 16434, 16753, 17040, 16639, 17705, 18283, 18175, 18789, 19007, 19474, 19762, 20193, 20456, 20953, 21502, 21775, 22227, 22732, 22693, 23719, 24140, 24823, 25641, 26266, 26937, 27413, 28161, 29107, 29582, 30645, 31927};    
       // 0-45
       int bendLinear[512] = {0, 266, 414, 471, 460, 409, 341, 283, 251, 243, 256, 284, 322, 367, 413, 456, 494, 527, 556, 581, 603, 622, 639, 655, 670, 684, 698, 711, 724, 737, 750, 763, 776, 790, 805, 820, 836, 852, 868, 884, 900, 916, 931, 945, 959, 972, 984, 995, 1005, 1016, 1025, 1034, 1043, 1051, 1059, 1066, 1074, 1081, 1088, 1095, 1102, 1110, 1117, 1124, 1131, 1138, 1145, 1152, 1160, 1167, 1174, 1181, 1188, 1195, 1202, 1209, 1216, 1223, 1230, 1237, 1244, 1250, 1257, 1264, 1270, 1277, 1283, 1290, 1296, 1303, 1309, 1315, 1321, 1328, 1334, 1340, 1346, 1351, 1357, 1363, 1369, 1374, 1380, 1385, 1390, 1396, 1401, 1406, 1411, 1416, 1421, 1426, 1431, 1435, 1440, 1445, 1449, 1454, 1458, 1462, 1466, 1471, 1475, 1479, 1483, 1487, 1490, 1494, 1498, 1502, 1505, 1509, 1513, 1516, 1520, 1524, 1527, 1531, 1535, 1538, 1542, 1545, 1549, 1553, 1556, 1560, 1564, 1567, 1571, 1575, 1579, 1583, 1587, 1591, 1595, 1599, 1603, 1607, 1612, 1616, 1621, 1625, 1630, 1634, 1639, 1644, 1648, 1653, 1658, 1663, 1668, 1673, 1677, 1682, 1687, 1692, 1697, 1702, 1707, 1712, 1717, 1721, 1726, 1731, 1736, 1741, 1745, 1750, 1755, 1759, 1764, 1769, 1774, 1778, 1783, 1788, 1794, 1799, 1804, 1810, 1816, 1822, 1828, 1835, 1842, 1849, 1857, 1864, 1873, 1881, 1890, 1900, 1910, 1920, 1931, 1941, 1952, 1964, 1975, 1987, 1998, 2010, 2022, 2033, 2045, 2056, 2067, 2078, 2089, 2100, 2110, 2120, 2129, 2138, 2147, 2155, 2163, 2171, 2179, 2187, 2194, 2201, 2209, 2216, 2223, 2230, 2236, 2243, 2250, 2257, 2264, 2272, 2279, 2286, 2294, 2302, 2311, 2319, 2329, 2338, 2348, 2359, 2370, 2382, 2394, 2408, 2421, 2436, 2451, 2466, 2482, 2498, 2513, 2529, 2545, 2561, 2577, 2592, 2607, 2621, 2634, 2647, 2660, 2672, 2684, 2696, 2707, 2719, 2730, 2742, 2754, 2766, 2779, 2792, 2805, 2819, 2832, 2846, 2860, 2873, 2887, 2900, 2913, 2926, 2938, 2951, 2964, 2978, 2993, 3010, 3028, 3049, 3071, 3096, 3122, 3150, 3178, 3205, 3233, 3259, 3284, 3306, 3328, 3348, 3367, 3386, 3405, 3425, 3445, 3465, 3487, 3509, 3532, 3555, 3579, 3604, 3628, 3653, 3676, 3699, 3720, 3739, 3758, 3779, 3801, 3827, 3858, 3895, 3935, 3977, 4019, 4058, 4093, 4122, 4149, 4173, 4197, 4222, 4249, 4277, 4306, 4335, 4363, 4389, 4416, 4444, 4479, 4523, 4576, 4633, 4691, 4743, 4787, 4824, 4857, 4888, 4919, 4954, 4994, 5043, 5101, 5161, 5220, 5273, 5318, 5358, 5397, 5436, 5478, 5523, 5573, 5624, 5671, 5708, 5748, 5807, 5901, 6006, 6086, 6136, 6174, 6217, 6275, 6348, 6432, 6516, 6588, 6648, 6707, 6772, 6835, 6889, 6950, 7041, 7156, 7261, 7341, 7404, 7462, 7532, 7612, 7686, 7772, 7900, 8028, 8113, 8186, 8279, 8403, 8529, 8630, 8729, 8835, 8941, 9035, 9145, 9285, 9416, 9505, 9627, 9843, 9956, 10078, 10187, 10335, 10524, 10647, 10763, 10842, 11111, 11262, 11419, 11554, 11755, 11933, 12060, 12310, 12537, 12682, 12873, 13090, 13242, 13444, 13733, 13993, 14144, 14367, 14631, 14894, 15282, 15422, 15636, 15997, 16248, 16600, 16788, 17097, 17351, 17674, 18192, 18340, 18655, 19175, 19426, 19831, 20094, 20565, 20928, 21221, 21585, 22144, 22616, 23017, 23446, 23854, 24495, 24702, 25222, 25558, 25992, 26341, 27464, 27526, 27794, 29114, 28917, 29645, 29953, 30443, 32254, 31508, 31876};
       // 0-60
       //int bendLinear[512] = {};
    #endif 
    #if SENSOR_TYPE == Y8_I512
        // 0-45
        //int bendLinear[512] = {0, 30, 57, 80, 100, 118, 133, 146, 156, 165, 173, 179, 184, 188, 191, 194, 197, 200, 203, 207, 212, 217, 224, 232, 241, 251, 262, 274, 286, 299, 312, 325, 339, 353, 366, 380, 393, 406, 419, 431, 443, 454, 464, 473, 482, 489, 495, 501, 505, 509, 512, 515, 518, 521, 524, 528, 532, 537, 543, 550, 558, 568, 579, 593, 608, 625, 643, 662, 681, 699, 715, 730, 743, 755, 765, 774, 782, 789, 796, 801, 806, 811, 815, 820, 824, 828, 833, 838, 843, 848, 854, 861, 868, 876, 884, 893, 904, 915, 927, 940, 954, 970, 987, 1005, 1024, 1043, 1062, 1080, 1096, 1111, 1125, 1137, 1148, 1157, 1165, 1172, 1178, 1184, 1188, 1192, 1195, 1197, 1199, 1201, 1203, 1204, 1205, 1207, 1208, 1210, 1212, 1214, 1217, 1221, 1225, 1230, 1236, 1243, 1251, 1260, 1270, 1282, 1295, 1309, 1325, 1343, 1361, 1379, 1398, 1416, 1434, 1451, 1467, 1482, 1496, 1509, 1521, 1533, 1543, 1552, 1561, 1568, 1574, 1579, 1583, 1586, 1589, 1590, 1591, 1593, 1594, 1596, 1598, 1602, 1607, 1613, 1622, 1632, 1645, 1660, 1678, 1700, 1724, 1750, 1776, 1801, 1825, 1846, 1865, 1882, 1898, 1912, 1924, 1934, 1943, 1951, 1958, 1963, 1968, 1972, 1975, 1978, 1981, 1984, 1988, 1993, 1998, 2005, 2013, 2024, 2036, 2050, 2068, 2088, 2110, 2133, 2156, 2178, 2198, 2215, 2229, 2241, 2252, 2260, 2268, 2274, 2280, 2285, 2290, 2295, 2300, 2305, 2311, 2318, 2326, 2334, 2344, 2355, 2368, 2382, 2398, 2417, 2437, 2459, 2484, 2510, 2535, 2559, 2581, 2599, 2615, 2629, 2640, 2649, 2657, 2664, 2669, 2674, 2678, 2682, 2686, 2691, 2697, 2705, 2714, 2727, 2742, 2760, 2783, 2810, 2839, 2870, 2900, 2928, 2954, 2978, 2999, 3018, 3035, 3048, 3059, 3066, 3072, 3076, 3081, 3086, 3093, 3103, 3117, 3136, 3161, 3192, 3227, 3262, 3292, 3316, 3335, 3350, 3361, 3370, 3377, 3384, 3391, 3399, 3409, 3422, 3438, 3458, 3484, 3516, 3554, 3599, 3643, 3679, 3707, 3727, 3742, 3754, 3765, 3778, 3793, 3811, 3833, 3860, 3892, 3931, 3977, 4022, 4061, 4091, 4113, 4130, 4142, 4151, 4159, 4169, 4180, 4196, 4217, 4246, 4284, 4329, 4376, 4420, 4460, 4494, 4520, 4537, 4545, 4550, 4559, 4578, 4612, 4668, 4738, 4801, 4849, 4885, 4910, 4924, 4934, 4946, 4968, 5007, 5070, 5136, 5182, 5210, 5228, 5244, 5265, 5294, 5331, 5379, 5439, 5502, 5552, 5587, 5611, 5629, 5648, 5677, 5729, 5807, 5887, 5951, 5997, 6027, 6048, 6078, 6131, 6208, 6284, 6344, 6386, 6406, 6422, 6457, 6534, 6630, 6689, 6714, 6720, 6745, 6845, 7007, 7094, 7109, 7085, 7076, 7152, 7356, 7473, 7484, 7489, 7532, 7624, 7744, 7845, 7901, 7946, 8036, 8127, 8180, 8222, 8308, 8474, 8555, 8578, 8631, 8730, 8857, 8956, 9003, 9110, 9257, 9337, 9394, 9509, 9621, 9695, 9818, 9992, 10065, 10133, 10331, 10419, 10485, 10606, 10803, 10887, 10996, 11131, 11127, 11444, 11522, 11645, 11844, 11960, 12165, 12271, 12426, 12585, 12721, 13000, 12974, 13278, 14348, 12966, 13896, 14087, 14223, 14472, 14548, 14873, 15084, 15242, 15420, 15696, 16137, 16228, 16402, 16857, 17073, 17389, 17639, 18017, 18270, 18731, 19127, 19423, 19446, 20008, 20415, 20704, 21332, 21679, 22144, 22723, 23118, 23778, 24125, 24749, 25431, 25906, 26799, 27373, 29930, 29046, 29762, 30747, 31647};
        // 0-90
        //int bendLinear[512] = {0, 20, 38, 54, 68, 80, 90, 98, 106, 112, 116, 120, 124, 126, 128, 130, 132, 134, 137, 140, 143, 147, 152, 158, 164, 171, 179, 187, 196, 205, 214, 223, 232, 242, 251, 260, 269, 278, 286, 294, 302, 309, 315, 321, 326, 331, 335, 338, 340, 343, 345, 347, 349, 351, 353, 356, 359, 363, 368, 374, 381, 389, 398, 409, 421, 433, 446, 459, 471, 482, 491, 500, 508, 514, 520, 525, 530, 534, 538, 541, 544, 547, 550, 553, 556, 559, 562, 566, 570, 574, 579, 584, 590, 596, 603, 610, 618, 627, 637, 647, 659, 671, 684, 697, 710, 722, 733, 744, 753, 761, 768, 774, 780, 785, 789, 792, 795, 797, 799, 801, 802, 804, 805, 806, 806, 807, 809, 810, 811, 813, 815, 818, 821, 825, 829, 834, 840, 847, 854, 863, 872, 883, 894, 906, 919, 932, 944, 957, 968, 979, 989, 999, 1008, 1017, 1025, 1032, 1038, 1044, 1049, 1053, 1056, 1059, 1061, 1063, 1064, 1065, 1065, 1066, 1068, 1070, 1072, 1076, 1080, 1086, 1094, 1103, 1114, 1127, 1142, 1159, 1177, 1195, 1212, 1227, 1241, 1253, 1265, 1274, 1283, 1291, 1297, 1303, 1308, 1312, 1315, 1318, 1320, 1323, 1325, 1327, 1329, 1332, 1336, 1340, 1346, 1353, 1361, 1370, 1382, 1396, 1411, 1426, 1442, 1457, 1470, 1482, 1492, 1500, 1507, 1513, 1518, 1522, 1526, 1529, 1532, 1536, 1539, 1543, 1547, 1552, 1557, 1564, 1571, 1579, 1588, 1598, 1610, 1623, 1637, 1653, 1670, 1688, 1705, 1720, 1734, 1745, 1755, 1763, 1770, 1776, 1781, 1785, 1788, 1791, 1793, 1796, 1799, 1803, 1808, 1815, 1823, 1833, 1846, 1861, 1879, 1899, 1920, 1940, 1959, 1977, 1993, 2008, 2020, 2031, 2040, 2047, 2052, 2055, 2058, 2061, 2065, 2071, 2078, 2089, 2103, 2122, 2144, 2168, 2191, 2210, 2224, 2236, 2245, 2252, 2257, 2262, 2266, 2271, 2278, 2285, 2296, 2308, 2325, 2345, 2370, 2399, 2430, 2456, 2476, 2491, 2502, 2510, 2518, 2526, 2536, 2548, 2563, 2581, 2603, 2630, 2661, 2692, 2718, 2738, 2753, 2763, 2771, 2778, 2783, 2790, 2798, 2809, 2825, 2847, 2874, 2905, 2937, 2966, 2992, 3014, 3029, 3038, 3042, 3046, 3055, 3072, 3102, 3147, 3194, 3231, 3259, 3279, 3291, 3298, 3305, 3317, 3340, 3378, 3425, 3461, 3482, 3495, 3506, 3519, 3538, 3562, 3594, 3634, 3677, 3712, 3737, 3753, 3766, 3778, 3799, 3835, 3889, 3943, 3985, 4015, 4034, 4049, 4071, 4111, 4165, 4214, 4253, 4276, 4288, 4301, 4333, 4396, 4453, 4483, 4494, 4499, 4534, 4632, 4723, 4755, 4748, 4732, 4752, 4859, 4981, 5007, 5005, 5025, 5077, 5157, 5231, 5278, 5307, 5360, 5427, 5466, 5494, 5545, 5655, 5719, 5736, 5770, 5836, 5922, 5990, 6022, 6096, 6195, 6248, 6288, 6370, 6442, 6493, 6586, 6698, 6737, 6801, 6932, 6978, 7031, 7129, 7253, 7296, 7393, 7451, 7479, 7704, 7730, 7838, 7975, 8050, 8178, 8260, 8360, 8465, 8639, 8696, 8829, 9153, 8903, 9326, 9391, 9469, 9651, 9648, 9977, 10016, 10186, 10342, 10700, 10677, 10780, 10815, 11252, 11409, 11625, 11801, 12081, 12220, 12549, 12863, 12952, 13158, 13389, 13700, 13942, 14300, 14639, 14902, 15287, 15695, 15941, 16332, 16779, 17204, 17555, 18041, 18689, 18808, 19688, 20144, 20848, 21401, 22255, 23155, 23780, 24793, 25633, 26847, 27333, 28969, 31257};
        // 0-60
        int bendLinear[512] = {0, 30, 57, 80, 100, 118, 133, 146, 156, 165, 173, 179, 184, 188, 191, 194, 197, 200, 203, 207, 212, 217, 224, 232, 241, 251, 262, 274, 286, 299, 312, 325, 339, 353, 366, 380, 393, 406, 419, 431, 443, 454, 464, 473, 482, 489, 495, 501, 505, 509, 512, 515, 518, 521, 524, 528, 532, 537, 543, 550, 558, 568, 579, 593, 608, 625, 643, 662, 681, 699, 715, 730, 743, 755, 765, 774, 782, 789, 796, 801, 806, 811, 815, 820, 824, 828, 833, 838, 843, 848, 854, 861, 868, 876, 884, 893, 904, 915, 927, 940, 954, 970, 987, 1005, 1024, 1043, 1062, 1080, 1096, 1111, 1125, 1137, 1148, 1157, 1165, 1172, 1178, 1184, 1188, 1192, 1195, 1197, 1199, 1201, 1203, 1204, 1205, 1207, 1208, 1210, 1212, 1214, 1217, 1221, 1225, 1230, 1236, 1243, 1251, 1260, 1270, 1282, 1295, 1309, 1325, 1343, 1361, 1379, 1398, 1416, 1434, 1451, 1467, 1482, 1496, 1509, 1521, 1533, 1543, 1552, 1561, 1568, 1574, 1579, 1583, 1586, 1589, 1590, 1591, 1593, 1594, 1596, 1598, 1602, 1607, 1613, 1622, 1632, 1645, 1660, 1678, 1700, 1724, 1750, 1776, 1801, 1825, 1846, 1865, 1882, 1898, 1912, 1924, 1934, 1943, 1951, 1958, 1963, 1968, 1972, 1975, 1978, 1981, 1984, 1988, 1993, 1998, 2005, 2013, 2024, 2036, 2050, 2068, 2088, 2110, 2133, 2156, 2178, 2198, 2215, 2229, 2241, 2252, 2260, 2268, 2274, 2280, 2285, 2290, 2295, 2300, 2305, 2311, 2318, 2326, 2334, 2344, 2355, 2368, 2382, 2398, 2417, 2437, 2459, 2484, 2510, 2535, 2559, 2581, 2599, 2615, 2629, 2640, 2649, 2657, 2664, 2669, 2674, 2678, 2682, 2686, 2691, 2697, 2705, 2714, 2727, 2742, 2760, 2783, 2810, 2839, 2870, 2900, 2928, 2954, 2978, 2999, 3018, 3035, 3048, 3059, 3066, 3072, 3076, 3081, 3086, 3093, 3103, 3117, 3136, 3161, 3192, 3227, 3262, 3292, 3316, 3335, 3350, 3361, 3370, 3377, 3384, 3391, 3399, 3409, 3422, 3438, 3458, 3484, 3516, 3554, 3599, 3643, 3679, 3707, 3727, 3742, 3754, 3765, 3778, 3793, 3811, 3833, 3860, 3892, 3931, 3977, 4022, 4061, 4091, 4113, 4130, 4142, 4151, 4159, 4169, 4180, 4196, 4217, 4246, 4284, 4329, 4376, 4420, 4460, 4494, 4520, 4537, 4545, 4550, 4559, 4578, 4612, 4668, 4738, 4801, 4849, 4885, 4910, 4924, 4934, 4946, 4968, 5007, 5070, 5136, 5182, 5210, 5228, 5244, 5265, 5294, 5331, 5379, 5439, 5502, 5552, 5587, 5611, 5629, 5648, 5677, 5729, 5807, 5887, 5951, 5997, 6027, 6048, 6078, 6131, 6208, 6284, 6344, 6386, 6406, 6422, 6457, 6534, 6630, 6689, 6714, 6720, 6745, 6845, 7007, 7094, 7109, 7085, 7076, 7152, 7356, 7473, 7484, 7489, 7532, 7624, 7744, 7845, 7901, 7946, 8036, 8127, 8180, 8222, 8308, 8474, 8555, 8578, 8631, 8730, 8857, 8956, 9003, 9110, 9257, 9337, 9394, 9509, 9621, 9695, 9818, 9992, 10065, 10133, 10331, 10419, 10485, 10606, 10803, 10887, 10996, 11131, 11127, 11444, 11522, 11645, 11844, 11960, 12165, 12271, 12426, 12585, 12721, 13000, 12974, 13278, 14348, 12966, 13896, 14087, 14223, 14472, 14548, 14873, 15084, 15242, 15420, 15696, 16137, 16228, 16402, 16857, 17073, 17389, 17639, 18017, 18270, 18731, 19127, 19423, 19446, 20008, 20415, 20704, 21332, 21679, 22144, 22723, 23118, 23778, 24125, 24749, 25431, 25906, 26799, 27373, 29930, 29046, 29762, 30747, 31647};
    #endif


    struct orikey orikeys[PANELCOUNT] = {
        {.pin = 0,  .panel = 0, .note = 0, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  0
        {.pin = 1,  .panel = 0, .note = 1, .hard = 1024, .soft = 0, .bendLO = 100, .bendHI = 1023, .state = 0, .last = 0},   //  1
    };

#endif 
